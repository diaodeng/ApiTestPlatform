{"version":3,"file":"tag-enum.B5VENiUp.js","sources":["../../../src/components/hrm/common/tag-enum.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <template v-for=\"(item, index) in options\">\r\n      <template v-if=\"values.includes(item.value)\">\r\n        <span\r\n          v-if=\"(item.elTagType == 'default' || item.elTagType == '') && (item.elTagClass == '' || item.elTagClass == null)\"\r\n          :key=\"item.value\"\r\n          :index=\"index\"\r\n          :class=\"item.elTagClass\"\r\n        >{{ item.label + \" \" }}</span>\r\n        <el-tag\r\n          v-else\r\n          :disable-transitions=\"true\"\r\n          :key=\"item.value\"\r\n          :index=\"index\"\r\n          :type=\"item.elTagType === '' ? 'primary' : item.elTagType\"\r\n          :class=\"item.elTagClass\"\r\n        >{{ item.label + \" \" }}</el-tag>\r\n      </template>\r\n    </template>\r\n    <template v-if=\"unmatch && showValue\">\r\n      {{ unmatchArray | handleArray }}\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// 记录未匹配的项\r\nconst unmatchArray = ref([]);\r\n\r\nconst props = defineProps({\r\n  // 数据\r\n  options: {\r\n    type: Array,\r\n    default: null,\r\n  },\r\n  // 当前的值\r\n  value: [Number, String, Array],\r\n  // 当未找到匹配的数据时，显示value\r\n  showValue: {\r\n    type: Boolean,\r\n    default: true,\r\n  },\r\n  separator: {\r\n    type: String,\r\n    default: \",\",\r\n  }\r\n});\r\n\r\nconst values = computed(() => {\r\n  if (props.value === null || typeof props.value === 'undefined' || props.value === '') return [];\r\n  return Array.isArray(props.value) ? props.value.map(item => item) : String(props.value).split(props.separator);\r\n});\r\n\r\nconst unmatch = computed(() => {\r\n  unmatchArray.value = [];\r\n  // 没有value不显示\r\n  if (props.value === null || typeof props.value === 'undefined' || props.value === '' || props.options.length === 0) return false\r\n  // 传入值为数组\r\n  let unmatch = false // 添加一个标志来判断是否有未匹配项\r\n  values.value.forEach(item => {\r\n    if (!props.options.some(v => v.value === item)) {\r\n      unmatchArray.value.push(item)\r\n      unmatch = true // 如果有未匹配项，将标志设置为true\r\n    }\r\n  })\r\n  return unmatch // 返回标志的值\r\n});\r\n\r\nfunction handleArray(array) {\r\n  if (array.length === 0) return \"\";\r\n  return array.reduce((pre, cur) => {\r\n    return pre + \" \" + cur;\r\n  });\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-tag + .el-tag {\r\n  margin-left: 10px;\r\n}\r\n</style>\r\n"],"names":["unmatchArray","ref","props","__props","values","computed","item","unmatch","v","handleArray","array","pre","cur"],"mappings":"mUA4BA,MAAMA,EAAeC,EAAI,CAAA,CAAE,EAErBC,EAAQC,EAmBRC,EAASC,EAAS,IAClBH,EAAM,QAAU,MAAQ,OAAOA,EAAM,MAAU,KAAeA,EAAM,QAAU,GAAW,CAAA,EACtF,MAAM,QAAQA,EAAM,KAAK,EAAIA,EAAM,MAAM,IAAII,GAAQA,CAAI,EAAI,OAAOJ,EAAM,KAAK,EAAE,MAAMA,EAAM,SAAS,CAC9G,EAEKK,EAAUF,EAAS,IAAM,CAG7B,GAFAL,EAAa,MAAQ,GAEjBE,EAAM,QAAU,MAAQ,OAAOA,EAAM,MAAU,KAAeA,EAAM,QAAU,IAAMA,EAAM,QAAQ,SAAW,EAAG,MAAO,GAE3H,IAAIK,EAAU,GACd,OAAAH,EAAO,MAAM,QAAQE,GAAQ,CACtBJ,EAAM,QAAQ,KAAKM,GAAKA,EAAE,QAAUF,CAAI,IAC3CN,EAAa,MAAM,KAAKM,CAAI,EAC5BC,EAAU,GAEhB,CAAG,EACMA,CACT,CAAC,EAED,SAASE,EAAYC,EAAO,CAC1B,OAAIA,EAAM,SAAW,EAAU,GACxBA,EAAM,OAAO,CAACC,EAAKC,IACjBD,EAAM,IAAMC,CACpB,CACH"}