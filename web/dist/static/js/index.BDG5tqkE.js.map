{"version":3,"file":"index.BDG5tqkE.js","sources":["../../../src/components/Crontab/second.vue","../../../src/components/Crontab/min.vue","../../../src/components/Crontab/hour.vue","../../../src/components/Crontab/day.vue","../../../src/components/Crontab/month.vue","../../../src/components/Crontab/week.vue","../../../src/components/Crontab/year.vue","../../../src/components/Crontab/result.vue","../../../src/components/Crontab/index.vue"],"sourcesContent":["<template>\r\n    <el-form>\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"1\">\r\n                秒，允许的通配符[, - * /]\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"2\">\r\n                周期从\r\n                <el-input-number v-model='cycle01' :min=\"0\" :max=\"58\" /> -\r\n                <el-input-number v-model='cycle02' :min=\"cycle01 + 1\" :max=\"59\" /> 秒\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"3\">\r\n                从\r\n                <el-input-number v-model='average01' :min=\"0\" :max=\"58\" /> 秒开始，每\r\n                <el-input-number v-model='average02' :min=\"1\" :max=\"59 - average01\" /> 秒执行一次\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"4\">\r\n                指定\r\n                <el-select clearable v-model=\"checkboxList\" placeholder=\"可多选\" multiple :multiple-limit=\"10\">\r\n                    <el-option v-for=\"item in 60\" :key=\"item\" :label=\"item - 1\" :value=\"item - 1\" />\r\n                </el-select>\r\n            </el-radio>\r\n        </el-form-item>\r\n    </el-form>\r\n</template>\r\n\r\n<script setup>\r\nconst emit = defineEmits(['update'])\r\nconst props = defineProps({\r\n    cron: {\r\n        type: Object,\r\n        default: {\r\n            second: \"*\",\r\n            min: \"*\",\r\n            hour: \"*\",\r\n            day: \"*\",\r\n            month: \"*\",\r\n            week: \"?\",\r\n            year: \"\",\r\n        }\r\n    },\r\n    check: {\r\n        type: Function,\r\n        default: () => {\r\n        }\r\n    }\r\n})\r\nconst radioValue = ref(1)\r\nconst cycle01 = ref(0)\r\nconst cycle02 = ref(1)\r\nconst average01 = ref(0)\r\nconst average02 = ref(1)\r\nconst checkboxList = ref([])\r\nconst checkCopy = ref([0])\r\nconst cycleTotal = computed(() => {\r\n    cycle01.value = props.check(cycle01.value, 0, 58)\r\n    cycle02.value = props.check(cycle02.value, cycle01.value + 1, 59)\r\n    return cycle01.value + '-' + cycle02.value\r\n})\r\nconst averageTotal = computed(() => {\r\n    average01.value = props.check(average01.value, 0, 58)\r\n    average02.value = props.check(average02.value, 1, 59 - average01.value)\r\n    return average01.value + '/' + average02.value\r\n})\r\nconst checkboxString = computed(() => {\r\n    return checkboxList.value.join(',')\r\n})\r\nwatch(() => props.cron.second, value => changeRadioValue(value))\r\nwatch([radioValue, cycleTotal, averageTotal, checkboxString], () => onRadioChange())\r\nfunction changeRadioValue(value) {\r\n    if (value === '*') {\r\n        radioValue.value = 1\r\n    } else if (value.indexOf('-') > -1) {\r\n        const indexArr = value.split('-')\r\n        cycle01.value = Number(indexArr[0])\r\n        cycle02.value = Number(indexArr[1])\r\n        radioValue.value = 2\r\n    } else if (value.indexOf('/') > -1) {\r\n        const indexArr = value.split('/')\r\n        average01.value = Number(indexArr[0])\r\n        average02.value = Number(indexArr[1])\r\n        radioValue.value = 3\r\n    } else {\r\n        checkboxList.value = [...new Set(value.split(',').map(item => Number(item)))]\r\n        radioValue.value = 4\r\n    }\r\n}\r\n// 单选按钮值变化时\r\nfunction onRadioChange() {\r\n    switch (radioValue.value) {\r\n        case 1:\r\n            emit('update', 'second', '*', 'second')\r\n            break\r\n        case 2:\r\n            emit('update', 'second', cycleTotal.value, 'second')\r\n            break\r\n        case 3:\r\n            emit('update', 'second', averageTotal.value, 'second')\r\n            break\r\n        case 4:\r\n            if (checkboxList.value.length === 0) {\r\n                checkboxList.value.push(checkCopy.value[0])\r\n            } else {\r\n                checkCopy.value = checkboxList.value\r\n            }\r\n            emit('update', 'second', checkboxString.value, 'second')\r\n            break\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.el-input-number--small, .el-select, .el-select--small {\r\n    margin: 0 0.2rem;\r\n}\r\n.el-select, .el-select--small {\r\n    width: 18.8rem;\r\n}\r\n</style>","<template>\r\n    <el-form>\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"1\">\r\n                分钟，允许的通配符[, - * /]\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"2\">\r\n                周期从\r\n                <el-input-number v-model='cycle01' :min=\"0\" :max=\"58\" /> -\r\n                <el-input-number v-model='cycle02' :min=\"cycle01 + 1\" :max=\"59\" /> 分钟\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"3\">\r\n                从\r\n                <el-input-number v-model='average01' :min=\"0\" :max=\"58\" /> 分钟开始， 每\r\n                <el-input-number v-model='average02' :min=\"1\" :max=\"59 - average01\" /> 分钟执行一次\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"4\">\r\n                指定\r\n                <el-select clearable v-model=\"checkboxList\" placeholder=\"可多选\" multiple :multiple-limit=\"10\">\r\n                    <el-option v-for=\"item in 60\" :key=\"item\" :label=\"item - 1\" :value=\"item - 1\" />\r\n                </el-select>\r\n            </el-radio>\r\n        </el-form-item>\r\n    </el-form>\r\n</template>\r\n<script setup>\r\nconst emit = defineEmits(['update'])\r\nconst props = defineProps({\r\n    cron: {\r\n        type: Object,\r\n        default: {\r\n            second: \"*\",\r\n            min: \"*\",\r\n            hour: \"*\",\r\n            day: \"*\",\r\n            month: \"*\",\r\n            week: \"?\",\r\n            year: \"\",\r\n        }\r\n    },\r\n    check: {\r\n        type: Function,\r\n        default: () => {\r\n        }\r\n    }\r\n})\r\nconst radioValue = ref(1)\r\nconst cycle01 = ref(0)\r\nconst cycle02 = ref(1)\r\nconst average01 = ref(0)\r\nconst average02 = ref(1)\r\nconst checkboxList = ref([])\r\nconst checkCopy = ref([0])\r\nconst cycleTotal = computed(() => {\r\n    cycle01.value = props.check(cycle01.value, 0, 58)\r\n    cycle02.value = props.check(cycle02.value, cycle01.value + 1, 59)\r\n    return cycle01.value + '-' + cycle02.value\r\n})\r\nconst averageTotal = computed(() => {\r\n    average01.value = props.check(average01.value, 0, 58)\r\n    average02.value = props.check(average02.value, 1, 59 - average01.value)\r\n    return average01.value + '/' + average02.value\r\n})\r\nconst checkboxString = computed(() => {\r\n    return checkboxList.value.join(',')\r\n})\r\nwatch(() => props.cron.min, value => changeRadioValue(value))\r\nwatch([radioValue, cycleTotal, averageTotal, checkboxString], () => onRadioChange())\r\nfunction changeRadioValue(value) {\r\n    if (value === '*') {\r\n        radioValue.value = 1\r\n    } else if (value.indexOf('-') > -1) {\r\n        const indexArr = value.split('-')\r\n        cycle01.value = Number(indexArr[0])\r\n        cycle02.value = Number(indexArr[1])\r\n        radioValue.value = 2\r\n    } else if (value.indexOf('/') > -1) {\r\n        const indexArr = value.split('/')\r\n        average01.value = Number(indexArr[0])\r\n        average02.value = Number(indexArr[1])\r\n        radioValue.value = 3\r\n    } else {\r\n        checkboxList.value = [...new Set(value.split(',').map(item => Number(item)))]\r\n        radioValue.value = 4\r\n    }\r\n}\r\nfunction onRadioChange() {\r\n    switch (radioValue.value) {\r\n        case 1:\r\n            emit('update', 'min', '*', 'min')\r\n            break\r\n        case 2:\r\n            emit('update', 'min', cycleTotal.value, 'min')\r\n            break\r\n        case 3:\r\n            emit('update', 'min', averageTotal.value, 'min')\r\n            break\r\n        case 4:\r\n            if (checkboxList.value.length === 0) {\r\n                checkboxList.value.push(checkCopy.value[0])\r\n            } else {\r\n                checkCopy.value = checkboxList.value\r\n            }\r\n            emit('update', 'min', checkboxString.value, 'min')\r\n            break\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.el-input-number--small, .el-select, .el-select--small {\r\n    margin: 0 0.2rem;\r\n}\r\n.el-select, .el-select--small {\r\n    width: 19.8rem;\r\n}\r\n</style>","<template>\r\n    <el-form>\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"1\">\r\n                小时，允许的通配符[, - * /]\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"2\">\r\n                周期从\r\n                <el-input-number v-model='cycle01' :min=\"0\" :max=\"22\" /> -\r\n                <el-input-number v-model='cycle02' :min=\"cycle01 + 1\" :max=\"23\" /> 时\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"3\">\r\n                从\r\n                <el-input-number v-model='average01' :min=\"0\" :max=\"22\" /> 时开始，每\r\n                <el-input-number v-model='average02' :min=\"1\" :max=\"23 - average01\" /> 小时执行一次\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"4\">\r\n                指定\r\n                <el-select clearable v-model=\"checkboxList\" placeholder=\"可多选\" multiple :multiple-limit=\"10\">\r\n                    <el-option v-for=\"item in 24\" :key=\"item\" :label=\"item - 1\" :value=\"item - 1\" />\r\n                </el-select>\r\n            </el-radio>\r\n        </el-form-item>\r\n    </el-form>\r\n</template>\r\n\r\n<script setup>\r\nconst emit = defineEmits(['update'])\r\nconst props = defineProps({\r\n    cron: {\r\n        type: Object,\r\n        default: {\r\n            second: \"*\",\r\n            min: \"*\",\r\n            hour: \"*\",\r\n            day: \"*\",\r\n            month: \"*\",\r\n            week: \"?\",\r\n            year: \"\",\r\n        }\r\n    },\r\n    check: {\r\n        type: Function,\r\n        default: () => {\r\n        }\r\n    }\r\n})\r\nconst radioValue = ref(1)\r\nconst cycle01 = ref(0)\r\nconst cycle02 = ref(1)\r\nconst average01 = ref(0)\r\nconst average02 = ref(1)\r\nconst checkboxList = ref([])\r\nconst checkCopy = ref([0])\r\nconst cycleTotal = computed(() => {\r\n    cycle01.value = props.check(cycle01.value, 0, 22)\r\n    cycle02.value = props.check(cycle02.value, cycle01.value + 1, 23)\r\n    return cycle01.value + '-' + cycle02.value\r\n})\r\nconst averageTotal = computed(() => {\r\n    average01.value = props.check(average01.value, 0, 22)\r\n    average02.value = props.check(average02.value, 1, 23 - average01.value)\r\n    return average01.value + '/' + average02.value\r\n})\r\nconst checkboxString = computed(() => {\r\n    return checkboxList.value.join(',')\r\n})\r\nwatch(() => props.cron.hour, value => changeRadioValue(value))\r\nwatch([radioValue, cycleTotal, averageTotal, checkboxString], () => onRadioChange())\r\nfunction changeRadioValue(value) {\r\n    if (value === '*') {\r\n        radioValue.value = 1\r\n    } else if (value.indexOf('-') > -1) {\r\n        const indexArr = value.split('-')\r\n        cycle01.value = Number(indexArr[0])\r\n        cycle02.value = Number(indexArr[1])\r\n        radioValue.value = 2\r\n    } else if (value.indexOf('/') > -1) {\r\n        const indexArr = value.split('/')\r\n        average01.value = Number(indexArr[0])\r\n        average02.value = Number(indexArr[1])\r\n        radioValue.value = 3\r\n    } else {\r\n        checkboxList.value = [...new Set(value.split(',').map(item => Number(item)))]\r\n        radioValue.value = 4\r\n    }\r\n}\r\nfunction onRadioChange() {\r\n    switch (radioValue.value) {\r\n        case 1:\r\n            emit('update', 'hour', '*', 'hour')\r\n            break\r\n        case 2:\r\n            emit('update', 'hour', cycleTotal.value, 'hour')\r\n            break\r\n        case 3:\r\n            emit('update', 'hour', averageTotal.value, 'hour')\r\n            break\r\n        case 4:\r\n            if (checkboxList.value.length === 0) {\r\n                checkboxList.value.push(checkCopy.value[0])\r\n            } else {\r\n                checkCopy.value = checkboxList.value\r\n            }\r\n            emit('update', 'hour', checkboxString.value, 'hour')\r\n            break\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.el-input-number--small, .el-select, .el-select--small {\r\n    margin: 0 0.2rem;\r\n}\r\n.el-select, .el-select--small {\r\n    width: 18.8rem;\r\n}\r\n</style>","<template>\r\n    <el-form>\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"1\">\r\n                日，允许的通配符[, - * ? / L W]\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"2\">\r\n                不指定\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"3\">\r\n                周期从\r\n                <el-input-number v-model='cycle01' :min=\"1\" :max=\"30\" /> -\r\n                <el-input-number v-model='cycle02' :min=\"cycle01 + 1\" :max=\"31\" /> 日\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"4\">\r\n                从\r\n                <el-input-number v-model='average01' :min=\"1\" :max=\"30\" /> 号开始，每\r\n                <el-input-number v-model='average02' :min=\"1\" :max=\"31 - average01\" /> 日执行一次\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"5\">\r\n                每月\r\n                <el-input-number v-model='workday' :min=\"1\" :max=\"31\" /> 号最近的那个工作日\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"6\">\r\n                本月最后一天\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"7\">\r\n                指定\r\n                <el-select clearable v-model=\"checkboxList\" placeholder=\"可多选\" multiple :multiple-limit=\"10\">\r\n                    <el-option v-for=\"item in 31\" :key=\"item\" :label=\"item\" :value=\"item\" />\r\n                </el-select>\r\n            </el-radio>\r\n        </el-form-item>\r\n    </el-form>\r\n</template>\r\n<script setup>\r\nconst emit = defineEmits(['update'])\r\nconst props = defineProps({\r\n    cron: {\r\n        type: Object,\r\n        default: {\r\n            second: \"*\",\r\n            min: \"*\",\r\n            hour: \"*\",\r\n            day: \"*\",\r\n            month: \"*\",\r\n            week: \"?\",\r\n            year: \"\",\r\n        }\r\n    },\r\n    check: {\r\n        type: Function,\r\n        default: () => {\r\n        }\r\n    }\r\n})\r\nconst radioValue = ref(1)\r\nconst cycle01 = ref(1)\r\nconst cycle02 = ref(2)\r\nconst average01 = ref(1)\r\nconst average02 = ref(1)\r\nconst workday = ref(1)\r\nconst checkboxList = ref([])\r\nconst checkCopy = ref([1])\r\nconst cycleTotal = computed(() => {\r\n    cycle01.value = props.check(cycle01.value, 1, 30)\r\n    cycle02.value = props.check(cycle02.value, cycle01.value + 1, 31)\r\n    return cycle01.value + '-' + cycle02.value\r\n})\r\nconst averageTotal = computed(() => {\r\n    average01.value = props.check(average01.value, 1, 30)\r\n    average02.value = props.check(average02.value, 1, 31 - average01.value)\r\n    return average01.value + '/' + average02.value\r\n})\r\nconst workdayTotal = computed(() => {\r\n    workday.value = props.check(workday.value, 1, 31)\r\n    return workday.value + 'W'\r\n})\r\nconst checkboxString = computed(() => {\r\n    return checkboxList.value.join(',')\r\n})\r\nwatch(() => props.cron.day, value => changeRadioValue(value))\r\nwatch([radioValue, cycleTotal, averageTotal, workdayTotal, checkboxString], () => onRadioChange())\r\nfunction changeRadioValue(value) {\r\n    if (value === \"*\") {\r\n        radioValue.value = 1\r\n    } else if (value === \"?\") {\r\n        radioValue.value = 2\r\n    } else if (value.indexOf(\"-\") > -1) {\r\n        const indexArr = value.split('-')\r\n        cycle01.value = Number(indexArr[0])\r\n        cycle02.value = Number(indexArr[1])\r\n        radioValue.value = 3\r\n    } else if (value.indexOf(\"/\") > -1) {\r\n        const indexArr = value.split('/')\r\n        average01.value = Number(indexArr[0])\r\n        average02.value = Number(indexArr[1])\r\n        radioValue.value = 4\r\n    } else if (value.indexOf(\"W\") > -1) {\r\n        const indexArr = value.split(\"W\")\r\n        workday.value = Number(indexArr[0])\r\n        radioValue.value = 5\r\n    } else if (value === \"L\") {\r\n        radioValue.value = 6\r\n    } else {\r\n        checkboxList.value = [...new Set(value.split(',').map(item => Number(item)))]\r\n        radioValue.value = 7\r\n    }\r\n}\r\n// 单选按钮值变化时\r\nfunction onRadioChange() {\r\n    if (radioValue.value === 2 && props.cron.week === '?') {\r\n        emit('update', 'week', '*', 'day')\r\n    }\r\n    if (radioValue.value !== 2 && props.cron.week !== '?') {\r\n        emit('update', 'week', '?', 'day')\r\n    }\r\n    switch (radioValue.value) {\r\n        case 1:\r\n            emit('update', 'day', '*', 'day')\r\n            break\r\n        case 2:\r\n            emit('update', 'day', '?', 'day')\r\n            break\r\n        case 3:\r\n            emit('update', 'day', cycleTotal.value, 'day')\r\n            break\r\n        case 4:\r\n            emit('update', 'day', averageTotal.value, 'day')\r\n            break\r\n        case 5:\r\n            emit('update', 'day', workdayTotal.value, 'day')\r\n            break\r\n        case 6:\r\n            emit('update', 'day', 'L', 'day')\r\n            break\r\n        case 7:\r\n            if (checkboxList.value.length === 0) {\r\n                checkboxList.value.push(checkCopy.value[0])\r\n            } else {\r\n                checkCopy.value = checkboxList.value\r\n            }\r\n            emit('update', 'day', checkboxString.value, 'day')\r\n            break\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.el-input-number--small, .el-select, .el-select--small {\r\n    margin: 0 0.2rem;\r\n}\r\n.el-select, .el-select--small {\r\n    width: 18.8rem;\r\n}\r\n</style>","<template>\r\n    <el-form>\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"1\">\r\n                月，允许的通配符[, - * /]\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"2\">\r\n                周期从\r\n                <el-input-number v-model='cycle01' :min=\"1\" :max=\"11\" /> -\r\n                <el-input-number v-model='cycle02' :min=\"cycle01 + 1\" :max=\"12\" /> 月\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"3\">\r\n                从\r\n                <el-input-number v-model='average01' :min=\"1\" :max=\"11\" /> 月开始，每\r\n                <el-input-number v-model='average02' :min=\"1\" :max=\"12 - average01\" /> 月月执行一次\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"4\">\r\n                指定\r\n                <el-select clearable v-model=\"checkboxList\" placeholder=\"可多选\" multiple :multiple-limit=\"8\">\r\n                    <el-option v-for=\"item in monthList\" :key=\"item.key\" :label=\"item.value\" :value=\"item.key\" />\r\n                </el-select>\r\n            </el-radio>\r\n        </el-form-item>\r\n    </el-form>\r\n</template>\r\n\r\n<script setup>\r\nconst emit = defineEmits(['update'])\r\nconst props = defineProps({\r\n    cron: {\r\n        type: Object,\r\n        default: {\r\n            second: \"*\",\r\n            min: \"*\",\r\n            hour: \"*\",\r\n            day: \"*\",\r\n            month: \"*\",\r\n            week: \"?\",\r\n            year: \"\",\r\n        }\r\n    },\r\n    check: {\r\n        type: Function,\r\n        default: () => {\r\n        }\r\n    }\r\n})\r\nconst radioValue = ref(1)\r\nconst cycle01 = ref(1)\r\nconst cycle02 = ref(2)\r\nconst average01 = ref(1)\r\nconst average02 = ref(1)\r\nconst checkboxList = ref([])\r\nconst checkCopy = ref([1])\r\nconst monthList = ref([\r\n    {key: 1, value: '一月'},\r\n    {key: 2, value: '二月'},\r\n    {key: 3, value: '三月'},\r\n    {key: 4, value: '四月'},\r\n    {key: 5, value: '五月'},\r\n    {key: 6, value: '六月'},\r\n    {key: 7, value: '七月'},\r\n    {key: 8, value: '八月'},\r\n    {key: 9, value: '九月'},\r\n    {key: 10, value: '十月'},\r\n    {key: 11, value: '十一月'},\r\n    {key: 12, value: '十二月'}\r\n])\r\nconst cycleTotal = computed(() => {\r\n    cycle01.value = props.check(cycle01.value, 1, 11)\r\n    cycle02.value = props.check(cycle02.value, cycle01.value + 1, 12)\r\n    return cycle01.value + '-' + cycle02.value\r\n})\r\nconst averageTotal = computed(() => {\r\n    average01.value = props.check(average01.value, 1, 11)\r\n    average02.value = props.check(average02.value, 1, 12 - average01.value)\r\n    return average01.value + '/' + average02.value\r\n})\r\nconst checkboxString = computed(() => {\r\n    return checkboxList.value.join(',')\r\n})\r\nwatch(() => props.cron.month, value => changeRadioValue(value))\r\nwatch([radioValue, cycleTotal, averageTotal, checkboxString], () => onRadioChange())\r\nfunction changeRadioValue(value) {\r\n    if (value === '*') {\r\n        radioValue.value = 1\r\n    } else if (value.indexOf('-') > -1) {\r\n        const indexArr = value.split('-')\r\n        cycle01.value = Number(indexArr[0])\r\n        cycle02.value = Number(indexArr[1])\r\n        radioValue.value = 2\r\n    } else if (value.indexOf('/') > -1) {\r\n        const indexArr = value.split('/')\r\n        average01.value = Number(indexArr[0])\r\n        average02.value = Number(indexArr[1])\r\n        radioValue.value = 3\r\n    } else {\r\n        checkboxList.value = [...new Set(value.split(',').map(item => Number(item)))]\r\n        radioValue.value = 4\r\n    }\r\n}\r\nfunction onRadioChange() {\r\n    switch (radioValue.value) {\r\n        case 1:\r\n            emit('update', 'month', '*', 'month')\r\n            break\r\n        case 2:\r\n            emit('update', 'month', cycleTotal.value, 'month')\r\n            break\r\n        case 3:\r\n            emit('update', 'month', averageTotal.value, 'month')\r\n            break\r\n        case 4:\r\n            if (checkboxList.value.length === 0) {\r\n                checkboxList.value.push(checkCopy.value[0])\r\n            } else {\r\n                checkCopy.value = checkboxList.value\r\n            }\r\n            emit('update', 'month', checkboxString.value, 'month')\r\n            break\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.el-input-number--small, .el-select, .el-select--small {\r\n    margin: 0 0.2rem;\r\n}\r\n.el-select, .el-select--small {\r\n    width: 18.8rem;\r\n}\r\n</style>","<template>\r\n    <el-form>\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"1\">\r\n                周，允许的通配符[, - * ? / L #]\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"2\">\r\n                不指定\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"3\">\r\n                周期从\r\n                <el-select clearable v-model=\"cycle01\">\r\n                    <el-option\r\n                        v-for=\"(item,index) of weekList\"\r\n                        :key=\"index\"\r\n                        :label=\"item.value\"\r\n                        :value=\"item.key\"\r\n                        :disabled=\"item.key === 7\"\r\n                    >{{item.value}}</el-option>\r\n                </el-select>\r\n                -\r\n                <el-select clearable v-model=\"cycle02\">\r\n                    <el-option\r\n                        v-for=\"(item,index) of weekList\"\r\n                        :key=\"index\"\r\n                        :label=\"item.value\"\r\n                        :value=\"item.key\"\r\n                        :disabled=\"item.key <= cycle01\"\r\n                    >{{item.value}}</el-option>\r\n                </el-select>\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"4\">\r\n                第\r\n                <el-input-number v-model='average01' :min=\"1\" :max=\"4\" /> 周的\r\n                <el-select clearable v-model=\"average02\">\r\n                    <el-option v-for=\"item in weekList\" :key=\"item.key\" :label=\"item.value\" :value=\"item.key\" />\r\n                </el-select>\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"5\">\r\n                本月最后一个\r\n                <el-select clearable v-model=\"weekday\">\r\n                    <el-option v-for=\"item in weekList\" :key=\"item.key\" :label=\"item.value\" :value=\"item.key\" />\r\n                </el-select>\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n            <el-radio v-model='radioValue' :label=\"6\">\r\n                指定\r\n                <el-select class=\"multiselect\" clearable v-model=\"checkboxList\" placeholder=\"可多选\" multiple :multiple-limit=\"6\">\r\n                    <el-option v-for=\"item in weekList\" :key=\"item.key\" :label=\"item.value\" :value=\"item.key\" />\r\n                </el-select>\r\n            </el-radio>\r\n        </el-form-item>\r\n\r\n    </el-form>\r\n</template>\r\n\r\n<script setup>\r\nconst emit = defineEmits(['update'])\r\nconst props = defineProps({\r\n    cron: {\r\n        type: Object,\r\n        default: {\r\n            second: \"*\",\r\n            min: \"*\",\r\n            hour: \"*\",\r\n            day: \"*\",\r\n            month: \"*\",\r\n            week: \"?\",\r\n            year: \"\"\r\n        }\r\n    },\r\n    check: {\r\n        type: Function,\r\n        default: () => {\r\n        }\r\n    }\r\n})\r\nconst radioValue = ref(2)\r\nconst cycle01 = ref(2)\r\nconst cycle02 = ref(3)\r\nconst average01 = ref(1)\r\nconst average02 = ref(2)\r\nconst weekday = ref(2)\r\nconst checkboxList = ref([])\r\nconst checkCopy = ref([2])\r\nconst weekList = ref([\r\n    {key: 1, value: '星期日'},\r\n    {key: 2, value: '星期一'},\r\n    {key: 3, value: '星期二'},\r\n    {key: 4, value: '星期三'},\r\n    {key: 5, value: '星期四'},\r\n    {key: 6, value: '星期五'},\r\n    {key: 7, value: '星期六'}\r\n])\r\nconst cycleTotal = computed(() => {\r\n    cycle01.value = props.check(cycle01.value, 1, 6)\r\n    cycle02.value = props.check(cycle02.value, cycle01.value + 1, 7)\r\n    return cycle01.value + '-' + cycle02.value\r\n})\r\nconst averageTotal = computed(() => {\r\n    average01.value = props.check(average01.value, 1, 4)\r\n    average02.value = props.check(average02.value, 1, 7)\r\n    return average02.value + '#' + average01.value\r\n})\r\nconst weekdayTotal = computed(() => {\r\n    weekday.value = props.check(weekday.value, 1, 7)\r\n    return weekday.value + 'L'\r\n})\r\nconst checkboxString = computed(() => {\r\n    return checkboxList.value.join(',')\r\n})\r\nwatch(() => props.cron.week, value => changeRadioValue(value))\r\nwatch([radioValue, cycleTotal, averageTotal, weekdayTotal, checkboxString], () => onRadioChange())\r\nfunction changeRadioValue(value) {\r\n    if (value === \"*\") {\r\n        radioValue.value = 1\r\n    } else if (value === \"?\") {\r\n        radioValue.value = 2\r\n    } else if (value.indexOf(\"-\") > -1) {\r\n        const indexArr = value.split('-')\r\n        cycle01.value = Number(indexArr[0])\r\n        cycle02.value = Number(indexArr[1])\r\n        radioValue.value = 3\r\n    } else if (value.indexOf(\"#\") > -1) {\r\n        const indexArr = value.split('#')\r\n        average01.value = Number(indexArr[1])\r\n        average02.value = Number(indexArr[0])\r\n        radioValue.value = 4\r\n    } else if (value.indexOf(\"L\") > -1) {\r\n        const indexArr = value.split(\"L\")\r\n        weekday.value = Number(indexArr[0])\r\n        radioValue.value = 5\r\n    } else {\r\n        checkboxList.value = [...new Set(value.split(',').map(item => Number(item)))]\r\n        radioValue.value = 6\r\n    }\r\n}\r\nfunction onRadioChange() {\r\n    if (radioValue.value === 2 && props.cron.day === '?') {\r\n        emit('update', 'day', '*', 'week')\r\n    }\r\n    if (radioValue.value !== 2 && props.cron.day !== '?') {\r\n        emit('update', 'day', '?', 'week')\r\n    }\r\n    switch (radioValue.value) {\r\n        case 1:\r\n            emit('update', 'week', '*', 'week')\r\n            break\r\n        case 2:\r\n            emit('update', 'week', '?', 'week')\r\n            break\r\n        case 3:\r\n            emit('update', 'week', cycleTotal.value, 'week')\r\n            break\r\n        case 4:\r\n            emit('update', 'week', averageTotal.value, 'week')\r\n            break\r\n        case 5:\r\n            emit('update', 'week', weekdayTotal.value, 'week')\r\n            break\r\n        case 6:\r\n            if (checkboxList.value.length === 0) {\r\n                checkboxList.value.push(checkCopy.value[0])\r\n            } else {\r\n                checkCopy.value = checkboxList.value\r\n            }\r\n            emit('update', 'week', checkboxString.value, 'week')\r\n            break\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.el-input-number--small, .el-select, .el-select--small {\r\n    margin: 0 0.5rem;\r\n}\r\n.el-select, .el-select--small {\r\n    width: 8rem;\r\n}\r\n.el-select.multiselect, .el-select--small.multiselect {\r\n    width: 17.8rem;\r\n}\r\n</style>","<template>\r\n  <el-form>\r\n    <el-form-item>\r\n      <el-radio :label=\"1\" v-model='radioValue'>\r\n        不填，允许的通配符[, - * /]\r\n      </el-radio>\r\n    </el-form-item>\r\n\r\n    <el-form-item>\r\n      <el-radio :label=\"2\" v-model='radioValue'>\r\n        每年\r\n      </el-radio>\r\n    </el-form-item>\r\n\r\n    <el-form-item>\r\n      <el-radio :label=\"3\" v-model='radioValue'>\r\n        周期从\r\n        <el-input-number v-model='cycle01' :min='fullYear' :max=\"2098\"/>\r\n        -\r\n        <el-input-number v-model='cycle02' :min=\"cycle01 ? cycle01 + 1 : fullYear + 1\" :max=\"2099\"/>\r\n      </el-radio>\r\n    </el-form-item>\r\n\r\n    <el-form-item>\r\n      <el-radio :label=\"4\" v-model='radioValue'>\r\n        从\r\n        <el-input-number v-model='average01' :min='fullYear' :max=\"2098\"/>\r\n        年开始，每\r\n        <el-input-number v-model='average02' :min=\"1\" :max=\"2099 - average01 || fullYear\"/>\r\n        年执行一次\r\n      </el-radio>\r\n\r\n    </el-form-item>\r\n\r\n    <el-form-item>\r\n      <el-radio :label=\"5\" v-model='radioValue'>\r\n        指定\r\n        <el-select clearable v-model=\"checkboxList\" placeholder=\"可多选\" multiple :multiple-limit=\"8\">\r\n          <el-option v-for=\"item in 9\" :key=\"item\" :value=\"item - 1 + fullYear\" :label=\"item -1 + fullYear\"/>\r\n        </el-select>\r\n      </el-radio>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script setup>\r\nconst emit = defineEmits(['update'])\r\nconst props = defineProps({\r\n  cron: {\r\n    type: Object,\r\n    default: {\r\n      second: \"*\",\r\n      min: \"*\",\r\n      hour: \"*\",\r\n      day: \"*\",\r\n      month: \"*\",\r\n      week: \"?\",\r\n      year: \"*\"\r\n    }\r\n  },\r\n  check: {\r\n    type: Function,\r\n    default: () => {\r\n    }\r\n  }\r\n})\r\nconst currentYear = Number(new Date().getFullYear());\r\nconst fullYear = ref(currentYear)\r\nconst maxFullYear = ref(currentYear + 10)\r\nconst radioValue = ref(1)\r\nconst cycle01 = ref(currentYear)\r\nconst cycle02 = ref(currentYear + 1)\r\nconst average01 = ref(currentYear)\r\nconst average02 = ref(1)\r\nconst checkboxList = ref([])\r\nconst checkCopy = ref([currentYear])\r\nconst cycleTotal = computed(() => {\r\n  cycle01.value = props.check(cycle01.value, fullYear.value, maxFullYear.value - 1)\r\n  cycle02.value = props.check(cycle02.value, cycle01.value + 1, maxFullYear.value)\r\n  return cycle01.value + '-' + cycle02.value\r\n})\r\nconst averageTotal = computed(() => {\r\n  average01.value = props.check(average01.value, fullYear.value, maxFullYear.value - 1)\r\n  average02.value = props.check(average02.value, 1, 10)\r\n  return average01.value + '/' + average02.value\r\n})\r\nconst checkboxString = computed(() => {\r\n  return checkboxList.value.join(',')\r\n})\r\n\r\nwatch(() => props.cron.year, value => changeRadioValue(value))\r\nwatch([radioValue, cycleTotal, averageTotal, checkboxString], () => onRadioChange())\r\n\r\nfunction changeRadioValue(value) {\r\n  console.log(value)\r\n\r\n  if (value === '') {\r\n    radioValue.value = 1\r\n  } else if (value === \"*\") {\r\n    radioValue.value = 2\r\n  } else if (value.indexOf(\"-\") > -1) {\r\n    const indexArr = value.split('-')\r\n    cycle01.value = Number(indexArr[0])\r\n    cycle02.value = Number(indexArr[1])\r\n    radioValue.value = 3\r\n  } else if (value.indexOf(\"/\") > -1) {\r\n    const indexArr = value.split('/')\r\n    average01.value = Number(indexArr[1])\r\n    average02.value = Number(indexArr[0])\r\n    radioValue.value = 4\r\n  } else {\r\n    checkboxList.value = [...new Set(value.split(',').map(item => Number(item)))]\r\n    radioValue.value = 5\r\n  }\r\n}\r\n\r\nfunction onRadioChange() {\r\n  switch (radioValue.value) {\r\n    case 1:\r\n      emit('update', 'year', '', 'year')\r\n      break\r\n    case 2:\r\n      emit('update', 'year', '*', 'year')\r\n      break\r\n    case 3:\r\n      emit('update', 'year', cycleTotal.value, 'year')\r\n      break\r\n    case 4:\r\n      emit('update', 'year', averageTotal.value, 'year')\r\n      break\r\n    case 5:\r\n\r\n      if (checkboxList.value.length === 0) {\r\n        checkboxList.value.push(checkCopy.value[0])\r\n      } else {\r\n        checkCopy.value = checkboxList.value\r\n      }\r\n      emit('update', 'year', checkboxString.value, 'year')\r\n      break\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  console.log(props.cron)\r\n  // fullYear.value = Number(new Date().getFullYear())\r\n  // maxFullYear.value = fullYear.value + 10\r\n  // cycle01.value = fullYear.value\r\n  // cycle02.value = cycle01.value + 1\r\n  // average01.value = fullYear.value\r\n  // checkCopy.value = [fullYear.value]\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.el-input-number--small, .el-select, .el-select--small {\r\n  margin: 0 0.2rem;\r\n}\r\n\r\n.el-select, .el-select--small {\r\n  width: 18.8rem;\r\n}\r\n</style>","<template>\r\n\t<div class=\"popup-result\">\r\n\t\t<p class=\"title\">最近5次运行时间</p>\r\n\t\t<ul class=\"popup-result-scroll\">\r\n\t\t\t<template v-if='isShow'>\r\n\t\t\t\t<li v-for='item in resultList' :key=\"item\">{{item}}</li>\r\n\t\t\t</template>\r\n\t\t\t<li v-else>计算结果中...</li>\r\n\t\t</ul>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\nconst props = defineProps({\r\n    ex: {\r\n        type: String,\r\n        default: ''\r\n    }\r\n})\r\nconst dayRule = ref('')\r\nconst dayRuleSup = ref('')\r\nconst dateArr = ref([])\r\nconst resultList = ref([])\r\nconst isShow = ref(false)\r\nwatch(() => props.ex, () => expressionChange())\r\n// 表达式值变化时，开始去计算结果\r\nfunction expressionChange() {\r\n    // 计算开始-隐藏结果\r\n    isShow.value = false;\r\n    // 获取规则数组[0秒、1分、2时、3日、4月、5星期、6年]\r\n    let ruleArr = props.ex.split(' ');\r\n    // 用于记录进入循环的次数\r\n    let nums = 0;\r\n    // 用于暂时存符号时间规则结果的数组\r\n    let resultArr = [];\r\n    // 获取当前时间精确至[年、月、日、时、分、秒]\r\n    let nTime = new Date();\r\n    let nYear = nTime.getFullYear();\r\n    let nMonth = nTime.getMonth() + 1;\r\n    let nDay = nTime.getDate();\r\n    let nHour = nTime.getHours();\r\n    let nMin = nTime.getMinutes();\r\n    let nSecond = nTime.getSeconds();\r\n    // 根据规则获取到近100年可能年数组、月数组等等\r\n    getSecondArr(ruleArr[0]);\r\n    getMinArr(ruleArr[1]);\r\n    getHourArr(ruleArr[2]);\r\n    getDayArr(ruleArr[3]);\r\n    getMonthArr(ruleArr[4]);\r\n    getWeekArr(ruleArr[5]);\r\n    getYearArr(ruleArr[6], nYear);\r\n    // 将获取到的数组赋值-方便使用\r\n    let sDate = dateArr.value[0];\r\n    let mDate = dateArr.value[1];\r\n    let hDate = dateArr.value[2];\r\n    let DDate = dateArr.value[3];\r\n    let MDate = dateArr.value[4];\r\n    let YDate = dateArr.value[5];\r\n    // 获取当前时间在数组中的索引\r\n    let sIdx = getIndex(sDate, nSecond);\r\n    let mIdx = getIndex(mDate, nMin);\r\n    let hIdx = getIndex(hDate, nHour);\r\n    let DIdx = getIndex(DDate, nDay);\r\n    let MIdx = getIndex(MDate, nMonth);\r\n    let YIdx = getIndex(YDate, nYear);\r\n    // 重置月日时分秒的函数(后面用的比较多)\r\n    const resetSecond = function () {\r\n        sIdx = 0;\r\n        nSecond = sDate[sIdx]\r\n    }\r\n    const resetMin = function () {\r\n        mIdx = 0;\r\n        nMin = mDate[mIdx]\r\n        resetSecond();\r\n    }\r\n    const resetHour = function () {\r\n        hIdx = 0;\r\n        nHour = hDate[hIdx]\r\n        resetMin();\r\n    }\r\n    const resetDay = function () {\r\n        DIdx = 0;\r\n        nDay = DDate[DIdx]\r\n        resetHour();\r\n    }\r\n    const resetMonth = function () {\r\n        MIdx = 0;\r\n        nMonth = MDate[MIdx]\r\n        resetDay();\r\n    }\r\n    // 如果当前年份不为数组中当前值\r\n    if (nYear !== YDate[YIdx]) {\r\n        resetMonth();\r\n    }\r\n    // 如果当前月份不为数组中当前值\r\n    if (nMonth !== MDate[MIdx]) {\r\n        resetDay();\r\n    }\r\n    // 如果当前“日”不为数组中当前值\r\n    if (nDay !== DDate[DIdx]) {\r\n        resetHour();\r\n    }\r\n    // 如果当前“时”不为数组中当前值\r\n    if (nHour !== hDate[hIdx]) {\r\n        resetMin();\r\n    }\r\n    // 如果当前“分”不为数组中当前值\r\n    if (nMin !== mDate[mIdx]) {\r\n        resetSecond();\r\n    }\r\n    // 循环年份数组\r\n    goYear: for (let Yi = YIdx; Yi < YDate.length; Yi++) {\r\n        let YY = YDate[Yi];\r\n        // 如果到达最大值时\r\n        if (nMonth > MDate[MDate.length - 1]) {\r\n            resetMonth();\r\n            continue;\r\n        }\r\n        // 循环月份数组\r\n        goMonth: for (let Mi = MIdx; Mi < MDate.length; Mi++) {\r\n            // 赋值、方便后面运算\r\n            let MM = MDate[Mi];\r\n            MM = MM < 10 ? '0' + MM : MM;\r\n            // 如果到达最大值时\r\n            if (nDay > DDate[DDate.length - 1]) {\r\n                resetDay();\r\n                if (Mi === MDate.length - 1) {\r\n                    resetMonth();\r\n                    continue goYear;\r\n                }\r\n                continue;\r\n            }\r\n            // 循环日期数组\r\n            goDay: for (let Di = DIdx; Di < DDate.length; Di++) {\r\n                // 赋值、方便后面运算\r\n                let DD = DDate[Di];\r\n                let thisDD = DD < 10 ? '0' + DD : DD;\r\n                // 如果到达最大值时\r\n                if (nHour > hDate[hDate.length - 1]) {\r\n                    resetHour();\r\n                    if (Di === DDate.length - 1) {\r\n                        resetDay();\r\n                        if (Mi === MDate.length - 1) {\r\n                            resetMonth();\r\n                            continue goYear;\r\n                        }\r\n                        continue goMonth;\r\n                    }\r\n                    continue;\r\n                }\r\n                // 判断日期的合法性，不合法的话也是跳出当前循环\r\n                if (checkDate(YY + '-' + MM + '-' + thisDD + ' 00:00:00') !== true && dayRule.value !== 'workDay' && dayRule.value !== 'lastWeek' && dayRule.value !== 'lastDay') {\r\n                    resetDay();\r\n                    continue goMonth;\r\n                }\r\n                // 如果日期规则中有值时\r\n                if (dayRule.value === 'lastDay') {\r\n                    // 如果不是合法日期则需要将前将日期调到合法日期即月末最后一天\r\n                    if (checkDate(YY + '-' + MM + '-' + thisDD + ' 00:00:00') !== true) {\r\n                        while (DD > 0 && checkDate(YY + '-' + MM + '-' + thisDD + ' 00:00:00') !== true) {\r\n                            DD--;\r\n                            thisDD = DD < 10 ? '0' + DD : DD;\r\n                        }\r\n                    }\r\n                } else if (dayRule.value === 'workDay') {\r\n                    // 校验并调整如果是2月30号这种日期传进来时需调整至正常月底\r\n                    if (checkDate(YY + '-' + MM + '-' + thisDD + ' 00:00:00') !== true) {\r\n                        while (DD > 0 && checkDate(YY + '-' + MM + '-' + thisDD + ' 00:00:00') !== true) {\r\n                            DD--;\r\n                            thisDD = DD < 10 ? '0' + DD : DD;\r\n                        }\r\n                    }\r\n                    // 获取达到条件的日期是星期X\r\n                    let thisWeek = formatDate(new Date(YY + '-' + MM + '-' + thisDD + ' 00:00:00'), 'week');\r\n                    // 当星期日时\r\n                    if (thisWeek === 1) {\r\n                        // 先找下一个日，并判断是否为月底\r\n                        DD++;\r\n                        thisDD = DD < 10 ? '0' + DD : DD;\r\n                        // 判断下一日已经不是合法日期\r\n                        if (checkDate(YY + '-' + MM + '-' + thisDD + ' 00:00:00') !== true) {\r\n                            DD -= 3;\r\n                        }\r\n                    } else if (thisWeek === 7) {\r\n                        // 当星期6时只需判断不是1号就可进行操作\r\n                        if (dayRuleSup.value !== 1) {\r\n                            DD--;\r\n                        } else {\r\n                            DD += 2;\r\n                        }\r\n                    }\r\n                } else if (dayRule.value === 'weekDay') {\r\n                    // 如果指定了是星期几\r\n                    // 获取当前日期是属于星期几\r\n                    let thisWeek = formatDate(new Date(YY + '-' + MM + '-' + DD + ' 00:00:00'), 'week');\r\n                    // 校验当前星期是否在星期池（dayRuleSup）中\r\n                    if (dayRuleSup.value.indexOf(thisWeek) < 0) {\r\n                        // 如果到达最大值时\r\n                        if (Di === DDate.length - 1) {\r\n                            resetDay();\r\n                            if (Mi === MDate.length - 1) {\r\n                                resetMonth();\r\n                                continue goYear;\r\n                            }\r\n                            continue goMonth;\r\n                        }\r\n                        continue;\r\n                    }\r\n                } else if (dayRule.value === 'assWeek') {\r\n                    // 如果指定了是第几周的星期几\r\n                    // 获取每月1号是属于星期几\r\n                    let thisWeek = formatDate(new Date(YY + '-' + MM + '-' + DD + ' 00:00:00'), 'week');\r\n                    if (dayRuleSup.value[1] >= thisWeek) {\r\n                        DD = (dayRuleSup.value[0] - 1) * 7 + dayRuleSup.value[1] - thisWeek + 1;\r\n                    } else {\r\n                        DD = dayRuleSup.value[0] * 7 + dayRuleSup.value[1] - thisWeek + 1;\r\n                    }\r\n                } else if (dayRule.value === 'lastWeek') {\r\n                    // 如果指定了每月最后一个星期几\r\n                    // 校验并调整如果是2月30号这种日期传进来时需调整至正常月底\r\n                    if (checkDate(YY + '-' + MM + '-' + thisDD + ' 00:00:00') !== true) {\r\n                        while (DD > 0 && checkDate(YY + '-' + MM + '-' + thisDD + ' 00:00:00') !== true) {\r\n                            DD--;\r\n                            thisDD = DD < 10 ? '0' + DD : DD;\r\n                        }\r\n                    }\r\n                    // 获取月末最后一天是星期几\r\n                    let thisWeek = formatDate(new Date(YY + '-' + MM + '-' + thisDD + ' 00:00:00'), 'week');\r\n                    // 找到要求中最近的那个星期几\r\n                    if (dayRuleSup.value < thisWeek) {\r\n                        DD -= thisWeek - dayRuleSup.value;\r\n                    } else if (dayRuleSup.value > thisWeek) {\r\n                        DD -= 7 - (dayRuleSup.value - thisWeek)\r\n                    }\r\n                }\r\n                // 判断时间值是否小于10置换成“05”这种格式\r\n                DD = DD < 10 ? '0' + DD : DD;\r\n                // 循环“时”数组\r\n                goHour: for (let hi = hIdx; hi < hDate.length; hi++) {\r\n                    let hh = hDate[hi] < 10 ? '0' + hDate[hi] : hDate[hi]\r\n                    // 如果到达最大值时\r\n                    if (nMin > mDate[mDate.length - 1]) {\r\n                        resetMin();\r\n                        if (hi === hDate.length - 1) {\r\n                            resetHour();\r\n                            if (Di === DDate.length - 1) {\r\n                                resetDay();\r\n                                if (Mi === MDate.length - 1) {\r\n                                    resetMonth();\r\n                                    continue goYear;\r\n                                }\r\n                                continue goMonth;\r\n                            }\r\n                            continue goDay;\r\n                        }\r\n                        continue;\r\n                    }\r\n                    // 循环\"分\"数组\r\n                    goMin: for (let mi = mIdx; mi < mDate.length; mi++) {\r\n                        let mm = mDate[mi] < 10 ? '0' + mDate[mi] : mDate[mi];\r\n                        // 如果到达最大值时\r\n                        if (nSecond > sDate[sDate.length - 1]) {\r\n                            resetSecond();\r\n                            if (mi === mDate.length - 1) {\r\n                                resetMin();\r\n                                if (hi === hDate.length - 1) {\r\n                                    resetHour();\r\n                                    if (Di === DDate.length - 1) {\r\n                                        resetDay();\r\n                                        if (Mi === MDate.length - 1) {\r\n                                            resetMonth();\r\n                                            continue goYear;\r\n                                        }\r\n                                        continue goMonth;\r\n                                    }\r\n                                    continue goDay;\r\n                                }\r\n                                continue goHour;\r\n                            }\r\n                            continue;\r\n                        }\r\n                        // 循环\"秒\"数组\r\n                        goSecond: for (let si = sIdx; si <= sDate.length - 1; si++) {\r\n                            let ss = sDate[si] < 10 ? '0' + sDate[si] : sDate[si];\r\n                            // 添加当前时间（时间合法性在日期循环时已经判断）\r\n                            if (MM !== '00' && DD !== '00') {\r\n                                resultArr.push(YY + '-' + MM + '-' + DD + ' ' + hh + ':' + mm + ':' + ss)\r\n                                nums++;\r\n                            }\r\n                            // 如果条数满了就退出循环\r\n                            if (nums === 5) break goYear;\r\n                            // 如果到达最大值时\r\n                            if (si === sDate.length - 1) {\r\n                                resetSecond();\r\n                                if (mi === mDate.length - 1) {\r\n                                    resetMin();\r\n                                    if (hi === hDate.length - 1) {\r\n                                        resetHour();\r\n                                        if (Di === DDate.length - 1) {\r\n                                            resetDay();\r\n                                            if (Mi === MDate.length - 1) {\r\n                                                resetMonth();\r\n                                                continue goYear;\r\n                                            }\r\n                                            continue goMonth;\r\n                                        }\r\n                                        continue goDay;\r\n                                    }\r\n                                    continue goHour;\r\n                                }\r\n                                continue goMin;\r\n                            }\r\n                        } //goSecond\r\n                    } //goMin\r\n                }//goHour\r\n            }//goDay\r\n        }//goMonth\r\n    }\r\n    // 判断100年内的结果条数\r\n    if (resultArr.length === 0) {\r\n        resultList.value = ['没有达到条件的结果！'];\r\n    } else {\r\n        resultList.value = resultArr;\r\n        if (resultArr.length !== 5) {\r\n            resultList.value.push('最近100年内只有上面' + resultArr.length + '条结果！')\r\n        }\r\n    }\r\n    // 计算完成-显示结果\r\n    isShow.value = true;\r\n}\r\n// 用于计算某位数字在数组中的索引\r\nfunction getIndex(arr, value) {\r\n    if (value <= arr[0] || value > arr[arr.length - 1]) {\r\n        return 0;\r\n    } else {\r\n        for (let i = 0; i < arr.length - 1; i++) {\r\n            if (value > arr[i] && value <= arr[i + 1]) {\r\n                return i + 1;\r\n            }\r\n        }\r\n    }\r\n}\r\n// 获取\"年\"数组\r\nfunction getYearArr(rule, year) {\r\n    dateArr.value[5] = getOrderArr(year, year + 100);\r\n    if (rule !== undefined) {\r\n        if (rule.indexOf('-') >= 0) {\r\n            dateArr.value[5] = getCycleArr(rule, year + 100, false)\r\n        } else if (rule.indexOf('/') >= 0) {\r\n            dateArr.value[5] = getAverageArr(rule, year + 100)\r\n        } else if (rule !== '*') {\r\n            dateArr.value[5] = getAssignArr(rule)\r\n        }\r\n    }\r\n}\r\n// 获取\"月\"数组\r\nfunction getMonthArr(rule) {\r\n    dateArr.value[4] = getOrderArr(1, 12);\r\n    if (rule.indexOf('-') >= 0) {\r\n        dateArr.value[4] = getCycleArr(rule, 12, false)\r\n    } else if (rule.indexOf('/') >= 0) {\r\n        dateArr.value[4] = getAverageArr(rule, 12)\r\n    } else if (rule !== '*') {\r\n        dateArr.value[4] = getAssignArr(rule)\r\n    }\r\n}\r\n// 获取\"日\"数组-主要为日期规则\r\nfunction getWeekArr(rule) {\r\n    // 只有当日期规则的两个值均为“”时则表达日期是有选项的\r\n    if (dayRule.value === '' && dayRuleSup.value === '') {\r\n        if (rule.indexOf('-') >= 0) {\r\n            dayRule.value = 'weekDay';\r\n            dayRuleSup.value = getCycleArr(rule, 7, false)\r\n        } else if (rule.indexOf('#') >= 0) {\r\n            dayRule.value = 'assWeek';\r\n            let matchRule = rule.match(/[0-9]{1}/g);\r\n            dayRuleSup.value = [Number(matchRule[1]), Number(matchRule[0])];\r\n            dateArr.value[3] = [1];\r\n            if (dayRuleSup.value[1] === 7) {\r\n                dayRuleSup.value[1] = 0;\r\n            }\r\n        } else if (rule.indexOf('L') >= 0) {\r\n            dayRule.value = 'lastWeek';\r\n            dayRuleSup.value = Number(rule.match(/[0-9]{1,2}/g)[0]);\r\n            dateArr.value[3] = [31];\r\n            if (dayRuleSup.value === 7) {\r\n                dayRuleSup.value = 0;\r\n            }\r\n        } else if (rule !== '*' && rule !== '?') {\r\n            dayRule.value = 'weekDay';\r\n            dayRuleSup.value = getAssignArr(rule)\r\n        }\r\n    }\r\n}\r\n// 获取\"日\"数组-少量为日期规则\r\nfunction getDayArr(rule) {\r\n    dateArr.value[3] = getOrderArr(1, 31);\r\n    dayRule.value = '';\r\n    dayRuleSup.value = '';\r\n    if (rule.indexOf('-') >= 0) {\r\n        dateArr.value[3] = getCycleArr(rule, 31, false)\r\n        dayRuleSup.value = 'null';\r\n    } else if (rule.indexOf('/') >= 0) {\r\n        dateArr.value[3] = getAverageArr(rule, 31)\r\n        dayRuleSup.value = 'null';\r\n    } else if (rule.indexOf('W') >= 0) {\r\n        dayRule.value = 'workDay';\r\n        dayRuleSup.value = Number(rule.match(/[0-9]{1,2}/g)[0]);\r\n        dateArr.value[3] = [dayRuleSup.value];\r\n    } else if (rule.indexOf('L') >= 0) {\r\n        dayRule.value = 'lastDay';\r\n        dayRuleSup.value = 'null';\r\n        dateArr.value[3] = [31];\r\n    } else if (rule !== '*' && rule !== '?') {\r\n        dateArr.value[3] = getAssignArr(rule)\r\n        dayRuleSup.value = 'null';\r\n    } else if (rule === '*') {\r\n        dayRuleSup.value = 'null';\r\n    }\r\n}\r\n// 获取\"时\"数组\r\nfunction getHourArr(rule) {\r\n    dateArr.value[2] = getOrderArr(0, 23);\r\n    if (rule.indexOf('-') >= 0) {\r\n        dateArr.value[2] = getCycleArr(rule, 24, true)\r\n    } else if (rule.indexOf('/') >= 0) {\r\n        dateArr.value[2] = getAverageArr(rule, 23)\r\n    } else if (rule !== '*') {\r\n        dateArr.value[2] = getAssignArr(rule)\r\n    }\r\n}\r\n// 获取\"分\"数组\r\nfunction getMinArr(rule) {\r\n    dateArr.value[1] = getOrderArr(0, 59);\r\n    if (rule.indexOf('-') >= 0) {\r\n        dateArr.value[1] = getCycleArr(rule, 60, true)\r\n    } else if (rule.indexOf('/') >= 0) {\r\n        dateArr.value[1] = getAverageArr(rule, 59)\r\n    } else if (rule !== '*') {\r\n        dateArr.value[1] = getAssignArr(rule)\r\n    }\r\n}\r\n// 获取\"秒\"数组\r\nfunction getSecondArr(rule) {\r\n    dateArr.value[0] = getOrderArr(0, 59);\r\n    if (rule.indexOf('-') >= 0) {\r\n        dateArr.value[0] = getCycleArr(rule, 60, true)\r\n    } else if (rule.indexOf('/') >= 0) {\r\n        dateArr.value[0] = getAverageArr(rule, 59)\r\n    } else if (rule !== '*') {\r\n        dateArr.value[0] = getAssignArr(rule)\r\n    }\r\n}\r\n// 根据传进来的min-max返回一个顺序的数组\r\nfunction getOrderArr(min, max) {\r\n    let arr = [];\r\n    for (let i = min; i <= max; i++) {\r\n        arr.push(i);\r\n    }\r\n    return arr;\r\n}\r\n// 根据规则中指定的零散值返回一个数组\r\nfunction getAssignArr(rule) {\r\n    let arr = [];\r\n    let assiginArr = rule.split(',');\r\n    for (let i = 0; i < assiginArr.length; i++) {\r\n        arr[i] = Number(assiginArr[i])\r\n    }\r\n    arr.sort(compare)\r\n    return arr;\r\n}\r\n// 根据一定算术规则计算返回一个数组\r\nfunction getAverageArr(rule, limit) {\r\n    let arr = [];\r\n    let agArr = rule.split('/');\r\n    let min = Number(agArr[0]);\r\n    let step = Number(agArr[1]);\r\n    while (min <= limit) {\r\n        arr.push(min);\r\n        min += step;\r\n    }\r\n    return arr;\r\n}\r\n// 根据规则返回一个具有周期性的数组\r\nfunction getCycleArr(rule, limit, status) {\r\n    // status--表示是否从0开始（则从1开始）\r\n    let arr = [];\r\n    let cycleArr = rule.split('-');\r\n    let min = Number(cycleArr[0]);\r\n    let max = Number(cycleArr[1]);\r\n    if (min > max) {\r\n        max += limit;\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        let add = 0;\r\n        if (status === false && i % limit === 0) {\r\n            add = limit;\r\n        }\r\n        arr.push(Math.round(i % limit + add))\r\n    }\r\n    arr.sort(compare)\r\n    return arr;\r\n}\r\n// 比较数字大小（用于Array.sort）\r\nfunction compare(value1, value2) {\r\n    if (value2 - value1 > 0) {\r\n        return -1;\r\n    } else {\r\n        return 1;\r\n    }\r\n}\r\n// 格式化日期格式如：2017-9-19 18:04:33\r\nfunction formatDate(value, type) {\r\n    // 计算日期相关值\r\n    let time = typeof value == 'number' ? new Date(value) : value;\r\n    let Y = time.getFullYear();\r\n    let M = time.getMonth() + 1;\r\n    let D = time.getDate();\r\n    let h = time.getHours();\r\n    let m = time.getMinutes();\r\n    let s = time.getSeconds();\r\n    let week = time.getDay();\r\n    // 如果传递了type的话\r\n    if (type === undefined) {\r\n        return Y + '-' + (M < 10 ? '0' + M : M) + '-' + (D < 10 ? '0' + D : D) + ' ' + (h < 10 ? '0' + h : h) + ':' + (m < 10 ? '0' + m : m) + ':' + (s < 10 ? '0' + s : s);\r\n    } else if (type === 'week') {\r\n        // 在quartz中 1为星期日\r\n        return week + 1;\r\n    }\r\n}\r\n// 检查日期是否存在\r\nfunction checkDate(value) {\r\n    let time = new Date(value);\r\n    let format = formatDate(time)\r\n    return value === format;\r\n}\r\nonMounted(() => {\r\n    expressionChange()\r\n})\r\n</script>","<template>\r\n    <div>\r\n        <el-tabs type=\"border-card\">\r\n            <el-tab-pane label=\"秒\" v-if=\"shouldHide('second')\">\r\n                <CrontabSecond\r\n                    @update=\"updateCrontabValue\"\r\n                    :check=\"checkNumber\"\r\n                    :cron=\"crontabValueObj\"\r\n                    ref=\"cronsecond\"\r\n                />\r\n            </el-tab-pane>\r\n\r\n            <el-tab-pane label=\"分钟\" v-if=\"shouldHide('min')\">\r\n                <CrontabMin\r\n                    @update=\"updateCrontabValue\"\r\n                    :check=\"checkNumber\"\r\n                    :cron=\"crontabValueObj\"\r\n                    ref=\"cronmin\"\r\n                />\r\n            </el-tab-pane>\r\n\r\n            <el-tab-pane label=\"小时\" v-if=\"shouldHide('hour')\">\r\n                <CrontabHour\r\n                    @update=\"updateCrontabValue\"\r\n                    :check=\"checkNumber\"\r\n                    :cron=\"crontabValueObj\"\r\n                    ref=\"cronhour\"\r\n                />\r\n            </el-tab-pane>\r\n\r\n            <el-tab-pane label=\"日\" v-if=\"shouldHide('day')\">\r\n                <CrontabDay\r\n                    @update=\"updateCrontabValue\"\r\n                    :check=\"checkNumber\"\r\n                    :cron=\"crontabValueObj\"\r\n                    ref=\"cronday\"\r\n                />\r\n            </el-tab-pane>\r\n\r\n            <el-tab-pane label=\"月\" v-if=\"shouldHide('month')\">\r\n                <CrontabMonth\r\n                    @update=\"updateCrontabValue\"\r\n                    :check=\"checkNumber\"\r\n                    :cron=\"crontabValueObj\"\r\n                    ref=\"cronmonth\"\r\n                />\r\n            </el-tab-pane>\r\n\r\n            <el-tab-pane label=\"周\" v-if=\"shouldHide('week')\">\r\n                <CrontabWeek\r\n                    @update=\"updateCrontabValue\"\r\n                    :check=\"checkNumber\"\r\n                    :cron=\"crontabValueObj\"\r\n                    ref=\"cronweek\"\r\n                />\r\n            </el-tab-pane>\r\n\r\n            <el-tab-pane label=\"年\" v-if=\"shouldHide('year')\">\r\n                <CrontabYear\r\n                    @update=\"updateCrontabValue\"\r\n                    :check=\"checkNumber\"\r\n                    :cron=\"crontabValueObj\"\r\n                    ref=\"cronyear\"\r\n                />\r\n            </el-tab-pane>\r\n        </el-tabs>\r\n\r\n        <div class=\"popup-main\">\r\n            <div class=\"popup-result\">\r\n                <p class=\"title\">时间表达式</p>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <th v-for=\"item of tabTitles\" :key=\"item\">{{item}}</th>\r\n                        <th>Cron 表达式</th>\r\n                    </tr>\r\n\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                      <td>\r\n                            <span v-if=\"crontabValueObj.second.length < 10\">{{crontabValueObj.second}}</span>\r\n                            <el-tooltip v-else :content=\"crontabValueObj.second\" placement=\"top\"><span>{{crontabValueObj.second}}</span></el-tooltip>\r\n                        </td>\r\n                        <td>\r\n                            <span v-if=\"crontabValueObj.min.length < 10\">{{crontabValueObj.min}}</span>\r\n                            <el-tooltip v-else :content=\"crontabValueObj.min\" placement=\"top\"><span>{{crontabValueObj.min}}</span></el-tooltip>\r\n                        </td>\r\n                        <td>\r\n                            <span v-if=\"crontabValueObj.hour.length < 10\">{{crontabValueObj.hour}}</span>\r\n                            <el-tooltip v-else :content=\"crontabValueObj.hour\" placement=\"top\"><span>{{crontabValueObj.hour}}</span></el-tooltip>\r\n                        </td>\r\n                        <td>\r\n                            <span v-if=\"crontabValueObj.day.length < 10\">{{crontabValueObj.day}}</span>\r\n                            <el-tooltip v-else :content=\"crontabValueObj.day\" placement=\"top\"><span>{{crontabValueObj.day}}</span></el-tooltip>\r\n                        </td>\r\n                        <td>\r\n                            <span v-if=\"crontabValueObj.month.length < 10\">{{crontabValueObj.month}}</span>\r\n                            <el-tooltip v-else :content=\"crontabValueObj.month\" placement=\"top\"><span>{{crontabValueObj.month}}</span></el-tooltip>\r\n                        </td>\r\n                        <td>\r\n                            <span v-if=\"crontabValueObj.week.length < 10\">{{crontabValueObj.week}}</span>\r\n                            <el-tooltip v-else :content=\"crontabValueObj.week\" placement=\"top\"><span>{{crontabValueObj.week}}</span></el-tooltip>\r\n                        </td>\r\n                        <td>\r\n                            <span v-if=\"crontabValueObj.year.length < 10\">{{crontabValueObj.year}}</span>\r\n                            <el-tooltip v-else :content=\"crontabValueObj.year\" placement=\"top\"><span>{{crontabValueObj.year}}</span></el-tooltip>\r\n                        </td>\r\n                        <td class=\"result\">\r\n                            <span v-if=\"crontabValueString.length < 90\">{{crontabValueString}}</span>\r\n                            <el-tooltip v-else :content=\"crontabValueString\" placement=\"top\"><span>{{crontabValueString}}</span></el-tooltip>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <CrontabResult :ex=\"crontabValueString\"></CrontabResult>\r\n\r\n            <div class=\"pop_btn\">\r\n                <el-button type=\"primary\" @click=\"submitFill\">确定</el-button>\r\n                <el-button type=\"warning\" @click=\"clearCron\">重置</el-button>\r\n                <el-button @click=\"hidePopup\">取消</el-button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport CrontabSecond from \"./second.vue\"\r\nimport CrontabMin from \"./min.vue\"\r\nimport CrontabHour from \"./hour.vue\"\r\nimport CrontabDay from \"./day.vue\"\r\nimport CrontabMonth from \"./month.vue\"\r\nimport CrontabWeek from \"./week.vue\"\r\nimport CrontabYear from \"./year.vue\"\r\nimport CrontabResult from \"./result.vue\"\r\nconst { proxy } = getCurrentInstance()\r\nconst emit = defineEmits(['hide', 'fill'])\r\nconst props = defineProps({\r\n    hideComponent: {\r\n        type: Array,\r\n        default: () => [],\r\n    },\r\n    expression: {\r\n        type: String,\r\n        default: \"\"\r\n    }\r\n})\r\nconst tabTitles = ref([\"秒\", \"分钟\", \"小时\", \"日\", \"月\", \"周\", \"年\"])\r\nconst tabActive = ref(0)\r\nconst hideComponent = ref([])\r\nconst expression = ref('')\r\nconst crontabValueObj = ref({\r\n    second: \"*\",\r\n    min: \"*\",\r\n    hour: \"*\",\r\n    day: \"*\",\r\n    month: \"*\",\r\n    week: \"?\",\r\n    year: \"*\",\r\n})\r\nconst crontabValueString = computed(() => {\r\n    const obj = crontabValueObj.value\r\n    return obj.second\r\n        + \" \"\r\n        + obj.min\r\n        + \" \"\r\n        + obj.hour\r\n        + \" \"\r\n        + obj.day\r\n        + \" \"\r\n        + obj.month\r\n        + \" \"\r\n        + obj.week\r\n        + (obj.year === \"\" ? \"\" : \" \" + obj.year)\r\n})\r\nwatch(()=>expression.value, () => resolveExp())\r\nfunction shouldHide(key) {\r\n    return !(hideComponent.value && hideComponent.value.includes(key))\r\n}\r\nfunction resolveExp() {\r\n    // 反解析 表达式\r\n    if (expression.value) {\r\n        const arr = expression.value.split(/\\s+/)\r\n        if (arr.length >= 6) {\r\n            //6 位以上是合法表达式\r\n            let obj = {\r\n                second: arr[0],\r\n                min: arr[1],\r\n                hour: arr[2],\r\n                day: arr[3],\r\n                month: arr[4],\r\n                week: arr[5],\r\n                year: arr[6] ? arr[6] : \"\"\r\n            }\r\n            crontabValueObj.value = {...obj};\r\n        }\r\n    } else {\r\n        // 没有传入的表达式 则还原\r\n        clearCron()\r\n    }\r\n}\r\n// tab切换值\r\nfunction tabCheck(index) {\r\n    tabActive.value = index\r\n}\r\n// 由子组件触发，更改表达式组成的字段值\r\nfunction updateCrontabValue(name, value, from) {\r\n    console.log(name + \": \" + value + \": \" + from)\r\n    crontabValueObj.value[name] = value\r\n}\r\n// 表单选项的子组件校验数字格式（通过-props传递）\r\nfunction checkNumber(value, minLimit, maxLimit) {\r\n    // 检查必须为整数\r\n    value = Math.floor(value)\r\n    if (value < minLimit) {\r\n        value = minLimit\r\n    } else if (value > maxLimit) {\r\n        value = maxLimit\r\n    }\r\n    return value\r\n}\r\n// 隐藏弹窗\r\nfunction hidePopup() {\r\n    emit(\"hide\")\r\n}\r\n// 填充表达式\r\nfunction submitFill() {\r\n    emit(\"fill\", crontabValueString.value)\r\n    hidePopup()\r\n}\r\nfunction clearCron() {\r\n    // 还原选择项\r\n    crontabValueObj.value = {\r\n        second: \"*\",\r\n        min: \"*\",\r\n        hour: \"*\",\r\n        day: \"*\",\r\n        month: \"*\",\r\n        week: \"?\",\r\n        year: \"*\",\r\n    }\r\n}\r\nonMounted(() => {\r\n    expression.value = props.expression\r\n    hideComponent.value = props.hideComponent\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.pop_btn {\r\n    text-align: center;\r\n    margin-top: 20px;\r\n}\r\n.popup-main {\r\n    position: relative;\r\n    margin: 10px auto;\r\n    background: #fff;\r\n    border-radius: 5px;\r\n    font-size: 12px;\r\n    overflow: hidden;\r\n}\r\n.popup-title {\r\n    overflow: hidden;\r\n    line-height: 34px;\r\n    padding-top: 6px;\r\n    background: #f2f2f2;\r\n}\r\n.popup-result {\r\n    box-sizing: border-box;\r\n    line-height: 24px;\r\n    margin: 25px auto;\r\n    padding: 15px 10px 10px;\r\n    border: 1px solid #ccc;\r\n    position: relative;\r\n}\r\n.popup-result .title {\r\n    position: absolute;\r\n    top: -28px;\r\n    left: 50%;\r\n    width: 140px;\r\n    font-size: 14px;\r\n    margin-left: -70px;\r\n    text-align: center;\r\n    line-height: 30px;\r\n    background: #fff;\r\n}\r\n.popup-result table {\r\n    text-align: center;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n}\r\n.popup-result table td:not(.result) {\r\n    width: 3.5rem;\r\n    min-width: 3.5rem;\r\n    max-width: 3.5rem;\r\n}\r\n.popup-result table span {\r\n    display: block;\r\n    width: 100%;\r\n    font-family: arial;\r\n    line-height: 30px;\r\n    height: 30px;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    border: 1px solid #e8e8e8;\r\n}\r\n.popup-result-scroll {\r\n    font-size: 12px;\r\n    line-height: 24px;\r\n    height: 10em;\r\n    overflow-y: auto;\r\n}\r\n</style>"],"names":["emit","__emit","props","__props","radioValue","ref","cycle01","cycle02","average01","average02","checkboxList","checkCopy","cycleTotal","computed","averageTotal","checkboxString","watch","value","changeRadioValue","onRadioChange","indexArr","item","workday","workdayTotal","monthList","weekday","weekList","weekdayTotal","currentYear","fullYear","maxFullYear","onMounted","dayRule","dayRuleSup","dateArr","resultList","isShow","expressionChange","ruleArr","nums","resultArr","nTime","nYear","nMonth","nDay","nHour","nMin","nSecond","getSecondArr","getMinArr","getHourArr","getDayArr","getMonthArr","getWeekArr","getYearArr","sDate","mDate","hDate","DDate","MDate","YDate","sIdx","getIndex","mIdx","hIdx","DIdx","MIdx","YIdx","resetSecond","resetMin","resetHour","resetDay","resetMonth","goYear","Yi","YY","goMonth","Mi","MM","goDay","Di","DD","thisDD","checkDate","thisWeek","formatDate","goHour","hi","hh","goMin","mi","mm","si","ss","arr","i","rule","year","getOrderArr","getCycleArr","getAverageArr","getAssignArr","matchRule","min","max","assiginArr","compare","limit","agArr","step","status","cycleArr","add","value1","value2","type","time","Y","M","D","h","m","s","week","format","tabTitles","hideComponent","expression","crontabValueObj","crontabValueString","obj","resolveExp","shouldHide","key","clearCron","updateCrontabValue","name","from","checkNumber","minLimit","maxLimit","hidePopup","submitFill"],"mappings":"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"}