/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */const Z_FIXED$1=4,Z_BINARY=0,Z_TEXT=1,Z_UNKNOWN$1=2;function zero$1(e){let i=e.length;for(;--i>=0;)e[i]=0}const STORED_BLOCK=0,STATIC_TREES=1,DYN_TREES=2,MIN_MATCH$1=3,MAX_MATCH$1=258,LENGTH_CODES$1=29,LITERALS$1=256,L_CODES$1=LITERALS$1+1+LENGTH_CODES$1,D_CODES$1=30,BL_CODES$1=19,HEAP_SIZE$1=2*L_CODES$1+1,MAX_BITS$1=15,Buf_size=16,MAX_BL_BITS=7,END_BLOCK=256,REP_3_6=16,REPZ_3_10=17,REPZ_11_138=18,extra_lbits=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),extra_dbits=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),extra_blbits=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),bl_order=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),DIST_CODE_LEN=512,static_ltree=new Array((L_CODES$1+2)*2);zero$1(static_ltree);const static_dtree=new Array(D_CODES$1*2);zero$1(static_dtree);const _dist_code=new Array(DIST_CODE_LEN);zero$1(_dist_code);const _length_code=new Array(MAX_MATCH$1-MIN_MATCH$1+1);zero$1(_length_code);const base_length=new Array(LENGTH_CODES$1);zero$1(base_length);const base_dist=new Array(D_CODES$1);zero$1(base_dist);function StaticTreeDesc(e,i,t,n,_){this.static_tree=e,this.extra_bits=i,this.extra_base=t,this.elems=n,this.max_length=_,this.has_stree=e&&e.length}let static_l_desc,static_d_desc,static_bl_desc;function TreeDesc(e,i){this.dyn_tree=e,this.max_code=0,this.stat_desc=i}const d_code=e=>e<256?_dist_code[e]:_dist_code[256+(e>>>7)],put_short=(e,i)=>{e.pending_buf[e.pending++]=i&255,e.pending_buf[e.pending++]=i>>>8&255},send_bits=(e,i,t)=>{e.bi_valid>Buf_size-t?(e.bi_buf|=i<<e.bi_valid&65535,put_short(e,e.bi_buf),e.bi_buf=i>>Buf_size-e.bi_valid,e.bi_valid+=t-Buf_size):(e.bi_buf|=i<<e.bi_valid&65535,e.bi_valid+=t)},send_code=(e,i,t)=>{send_bits(e,t[i*2],t[i*2+1])},bi_reverse=(e,i)=>{let t=0;do t|=e&1,e>>>=1,t<<=1;while(--i>0);return t>>>1},bi_flush=e=>{e.bi_valid===16?(put_short(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=e.bi_buf&255,e.bi_buf>>=8,e.bi_valid-=8)},gen_bitlen=(e,i)=>{const t=i.dyn_tree,n=i.max_code,_=i.stat_desc.static_tree,a=i.stat_desc.has_stree,f=i.stat_desc.extra_bits,r=i.stat_desc.extra_base,u=i.stat_desc.max_length;let l,o,S,c,d,E,k=0;for(c=0;c<=MAX_BITS$1;c++)e.bl_count[c]=0;for(t[e.heap[e.heap_max]*2+1]=0,l=e.heap_max+1;l<HEAP_SIZE$1;l++)o=e.heap[l],c=t[t[o*2+1]*2+1]+1,c>u&&(c=u,k++),t[o*2+1]=c,!(o>n)&&(e.bl_count[c]++,d=0,o>=r&&(d=f[o-r]),E=t[o*2],e.opt_len+=E*(c+d),a&&(e.static_len+=E*(_[o*2+1]+d)));if(k!==0){do{for(c=u-1;e.bl_count[c]===0;)c--;e.bl_count[c]--,e.bl_count[c+1]+=2,e.bl_count[u]--,k-=2}while(k>0);for(c=u;c!==0;c--)for(o=e.bl_count[c];o!==0;)S=e.heap[--l],!(S>n)&&(t[S*2+1]!==c&&(e.opt_len+=(c-t[S*2+1])*t[S*2],t[S*2+1]=c),o--)}},gen_codes=(e,i,t)=>{const n=new Array(MAX_BITS$1+1);let _=0,a,f;for(a=1;a<=MAX_BITS$1;a++)_=_+t[a-1]<<1,n[a]=_;for(f=0;f<=i;f++){let r=e[f*2+1];r!==0&&(e[f*2]=bi_reverse(n[r]++,r))}},tr_static_init=()=>{let e,i,t,n,_;const a=new Array(MAX_BITS$1+1);for(t=0,n=0;n<LENGTH_CODES$1-1;n++)for(base_length[n]=t,e=0;e<1<<extra_lbits[n];e++)_length_code[t++]=n;for(_length_code[t-1]=n,_=0,n=0;n<16;n++)for(base_dist[n]=_,e=0;e<1<<extra_dbits[n];e++)_dist_code[_++]=n;for(_>>=7;n<D_CODES$1;n++)for(base_dist[n]=_<<7,e=0;e<1<<extra_dbits[n]-7;e++)_dist_code[256+_++]=n;for(i=0;i<=MAX_BITS$1;i++)a[i]=0;for(e=0;e<=143;)static_ltree[e*2+1]=8,e++,a[8]++;for(;e<=255;)static_ltree[e*2+1]=9,e++,a[9]++;for(;e<=279;)static_ltree[e*2+1]=7,e++,a[7]++;for(;e<=287;)static_ltree[e*2+1]=8,e++,a[8]++;for(gen_codes(static_ltree,L_CODES$1+1,a),e=0;e<D_CODES$1;e++)static_dtree[e*2+1]=5,static_dtree[e*2]=bi_reverse(e,5);static_l_desc=new StaticTreeDesc(static_ltree,extra_lbits,LITERALS$1+1,L_CODES$1,MAX_BITS$1),static_d_desc=new StaticTreeDesc(static_dtree,extra_dbits,0,D_CODES$1,MAX_BITS$1),static_bl_desc=new StaticTreeDesc(new Array(0),extra_blbits,0,BL_CODES$1,MAX_BL_BITS)},init_block=e=>{let i;for(i=0;i<L_CODES$1;i++)e.dyn_ltree[i*2]=0;for(i=0;i<D_CODES$1;i++)e.dyn_dtree[i*2]=0;for(i=0;i<BL_CODES$1;i++)e.bl_tree[i*2]=0;e.dyn_ltree[END_BLOCK*2]=1,e.opt_len=e.static_len=0,e.sym_next=e.matches=0},bi_windup=e=>{e.bi_valid>8?put_short(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0},smaller=(e,i,t,n)=>{const _=i*2,a=t*2;return e[_]<e[a]||e[_]===e[a]&&n[i]<=n[t]},pqdownheap=(e,i,t)=>{const n=e.heap[t];let _=t<<1;for(;_<=e.heap_len&&(_<e.heap_len&&smaller(i,e.heap[_+1],e.heap[_],e.depth)&&_++,!smaller(i,n,e.heap[_],e.depth));)e.heap[t]=e.heap[_],t=_,_<<=1;e.heap[t]=n},compress_block=(e,i,t)=>{let n,_,a=0,f,r;if(e.sym_next!==0)do n=e.pending_buf[e.sym_buf+a++]&255,n+=(e.pending_buf[e.sym_buf+a++]&255)<<8,_=e.pending_buf[e.sym_buf+a++],n===0?send_code(e,_,i):(f=_length_code[_],send_code(e,f+LITERALS$1+1,i),r=extra_lbits[f],r!==0&&(_-=base_length[f],send_bits(e,_,r)),n--,f=d_code(n),send_code(e,f,t),r=extra_dbits[f],r!==0&&(n-=base_dist[f],send_bits(e,n,r)));while(a<e.sym_next);send_code(e,END_BLOCK,i)},build_tree=(e,i)=>{const t=i.dyn_tree,n=i.stat_desc.static_tree,_=i.stat_desc.has_stree,a=i.stat_desc.elems;let f,r,u=-1,l;for(e.heap_len=0,e.heap_max=HEAP_SIZE$1,f=0;f<a;f++)t[f*2]!==0?(e.heap[++e.heap_len]=u=f,e.depth[f]=0):t[f*2+1]=0;for(;e.heap_len<2;)l=e.heap[++e.heap_len]=u<2?++u:0,t[l*2]=1,e.depth[l]=0,e.opt_len--,_&&(e.static_len-=n[l*2+1]);for(i.max_code=u,f=e.heap_len>>1;f>=1;f--)pqdownheap(e,t,f);l=a;do f=e.heap[1],e.heap[1]=e.heap[e.heap_len--],pqdownheap(e,t,1),r=e.heap[1],e.heap[--e.heap_max]=f,e.heap[--e.heap_max]=r,t[l*2]=t[f*2]+t[r*2],e.depth[l]=(e.depth[f]>=e.depth[r]?e.depth[f]:e.depth[r])+1,t[f*2+1]=t[r*2+1]=l,e.heap[1]=l++,pqdownheap(e,t,1);while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],gen_bitlen(e,i),gen_codes(t,u,e.bl_count)},scan_tree=(e,i,t)=>{let n,_=-1,a,f=i[0*2+1],r=0,u=7,l=4;for(f===0&&(u=138,l=3),i[(t+1)*2+1]=65535,n=0;n<=t;n++)a=f,f=i[(n+1)*2+1],!(++r<u&&a===f)&&(r<l?e.bl_tree[a*2]+=r:a!==0?(a!==_&&e.bl_tree[a*2]++,e.bl_tree[REP_3_6*2]++):r<=10?e.bl_tree[REPZ_3_10*2]++:e.bl_tree[REPZ_11_138*2]++,r=0,_=a,f===0?(u=138,l=3):a===f?(u=6,l=3):(u=7,l=4))},send_tree=(e,i,t)=>{let n,_=-1,a,f=i[0*2+1],r=0,u=7,l=4;for(f===0&&(u=138,l=3),n=0;n<=t;n++)if(a=f,f=i[(n+1)*2+1],!(++r<u&&a===f)){if(r<l)do send_code(e,a,e.bl_tree);while(--r!==0);else a!==0?(a!==_&&(send_code(e,a,e.bl_tree),r--),send_code(e,REP_3_6,e.bl_tree),send_bits(e,r-3,2)):r<=10?(send_code(e,REPZ_3_10,e.bl_tree),send_bits(e,r-3,3)):(send_code(e,REPZ_11_138,e.bl_tree),send_bits(e,r-11,7));r=0,_=a,f===0?(u=138,l=3):a===f?(u=6,l=3):(u=7,l=4)}},build_bl_tree=e=>{let i;for(scan_tree(e,e.dyn_ltree,e.l_desc.max_code),scan_tree(e,e.dyn_dtree,e.d_desc.max_code),build_tree(e,e.bl_desc),i=BL_CODES$1-1;i>=3&&e.bl_tree[bl_order[i]*2+1]===0;i--);return e.opt_len+=3*(i+1)+5+5+4,i},send_all_trees=(e,i,t,n)=>{let _;for(send_bits(e,i-257,5),send_bits(e,t-1,5),send_bits(e,n-4,4),_=0;_<n;_++)send_bits(e,e.bl_tree[bl_order[_]*2+1],3);send_tree(e,e.dyn_ltree,i-1),send_tree(e,e.dyn_dtree,t-1)},detect_data_type=e=>{let i=4093624447,t;for(t=0;t<=31;t++,i>>>=1)if(i&1&&e.dyn_ltree[t*2]!==0)return 0;if(e.dyn_ltree[9*2]!==0||e.dyn_ltree[10*2]!==0||e.dyn_ltree[13*2]!==0)return 1;for(t=32;t<LITERALS$1;t++)if(e.dyn_ltree[t*2]!==0)return 1;return 0};let static_init_done=!1;const _tr_init$1=e=>{static_init_done||(tr_static_init(),static_init_done=!0),e.l_desc=new TreeDesc(e.dyn_ltree,static_l_desc),e.d_desc=new TreeDesc(e.dyn_dtree,static_d_desc),e.bl_desc=new TreeDesc(e.bl_tree,static_bl_desc),e.bi_buf=0,e.bi_valid=0,init_block(e)},_tr_stored_block$1=(e,i,t,n)=>{send_bits(e,(STORED_BLOCK<<1)+(n?1:0),3),bi_windup(e),put_short(e,t),put_short(e,~t),t&&e.pending_buf.set(e.window.subarray(i,i+t),e.pending),e.pending+=t},_tr_align$1=e=>{send_bits(e,STATIC_TREES<<1,3),send_code(e,END_BLOCK,static_ltree),bi_flush(e)},_tr_flush_block$1=(e,i,t,n)=>{let _,a,f=0;e.level>0?(e.strm.data_type===2&&(e.strm.data_type=detect_data_type(e)),build_tree(e,e.l_desc),build_tree(e,e.d_desc),f=build_bl_tree(e),_=e.opt_len+3+7>>>3,a=e.static_len+3+7>>>3,a<=_&&(_=a)):_=a=t+5,t+4<=_&&i!==-1?_tr_stored_block$1(e,i,t,n):e.strategy===4||a===_?(send_bits(e,(STATIC_TREES<<1)+(n?1:0),3),compress_block(e,static_ltree,static_dtree)):(send_bits(e,(DYN_TREES<<1)+(n?1:0),3),send_all_trees(e,e.l_desc.max_code+1,e.d_desc.max_code+1,f+1),compress_block(e,e.dyn_ltree,e.dyn_dtree)),init_block(e),n&&bi_windup(e)},_tr_tally$1=(e,i,t)=>(e.pending_buf[e.sym_buf+e.sym_next++]=i,e.pending_buf[e.sym_buf+e.sym_next++]=i>>8,e.pending_buf[e.sym_buf+e.sym_next++]=t,i===0?e.dyn_ltree[t*2]++:(e.matches++,i--,e.dyn_ltree[(_length_code[t]+LITERALS$1+1)*2]++,e.dyn_dtree[d_code(i)*2]++),e.sym_next===e.sym_end);var _tr_init_1=_tr_init$1,_tr_stored_block_1=_tr_stored_block$1,_tr_flush_block_1=_tr_flush_block$1,_tr_tally_1=_tr_tally$1,_tr_align_1=_tr_align$1,trees={_tr_init:_tr_init_1,_tr_stored_block:_tr_stored_block_1,_tr_flush_block:_tr_flush_block_1,_tr_tally:_tr_tally_1,_tr_align:_tr_align_1};const adler32=(e,i,t,n)=>{let _=e&65535|0,a=e>>>16&65535|0,f=0;for(;t!==0;){f=t>2e3?2e3:t,t-=f;do _=_+i[n++]|0,a=a+_|0;while(--f);_%=65521,a%=65521}return _|a<<16|0};var adler32_1=adler32;const makeTable=()=>{let e,i=[];for(var t=0;t<256;t++){e=t;for(var n=0;n<8;n++)e=e&1?3988292384^e>>>1:e>>>1;i[t]=e}return i},crcTable=new Uint32Array(makeTable()),crc32=(e,i,t,n)=>{const _=crcTable,a=n+t;e^=-1;for(let f=n;f<a;f++)e=e>>>8^_[(e^i[f])&255];return e^-1};var crc32_1=crc32,messages={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},constants$2={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init,_tr_stored_block,_tr_flush_block,_tr_tally,_tr_align}=trees,{Z_NO_FLUSH:Z_NO_FLUSH$2,Z_PARTIAL_FLUSH,Z_FULL_FLUSH:Z_FULL_FLUSH$1,Z_FINISH:Z_FINISH$3,Z_BLOCK:Z_BLOCK$1,Z_OK:Z_OK$3,Z_STREAM_END:Z_STREAM_END$3,Z_STREAM_ERROR:Z_STREAM_ERROR$2,Z_DATA_ERROR:Z_DATA_ERROR$2,Z_BUF_ERROR:Z_BUF_ERROR$1,Z_DEFAULT_COMPRESSION:Z_DEFAULT_COMPRESSION$1,Z_FILTERED,Z_HUFFMAN_ONLY,Z_RLE,Z_FIXED,Z_DEFAULT_STRATEGY:Z_DEFAULT_STRATEGY$1,Z_UNKNOWN,Z_DEFLATED:Z_DEFLATED$2}=constants$2,MAX_MEM_LEVEL=9,MAX_WBITS$1=15,DEF_MEM_LEVEL=8,LENGTH_CODES=29,LITERALS=256,L_CODES=LITERALS+1+LENGTH_CODES,D_CODES=30,BL_CODES=19,HEAP_SIZE=2*L_CODES+1,MAX_BITS=15,MIN_MATCH=3,MAX_MATCH=258,MIN_LOOKAHEAD=MAX_MATCH+MIN_MATCH+1,PRESET_DICT=32,INIT_STATE=42,GZIP_STATE=57,EXTRA_STATE=69,NAME_STATE=73,COMMENT_STATE=91,HCRC_STATE=103,BUSY_STATE=113,FINISH_STATE=666,BS_NEED_MORE=1,BS_BLOCK_DONE=2,BS_FINISH_STARTED=3,BS_FINISH_DONE=4,OS_CODE=3,err=(e,i)=>(e.msg=messages[i],i),rank=e=>e*2-(e>4?9:0),zero=e=>{let i=e.length;for(;--i>=0;)e[i]=0},slide_hash=e=>{let i,t,n,_=e.w_size;i=e.hash_size,n=i;do t=e.head[--n],e.head[n]=t>=_?t-_:0;while(--i);i=_,n=i;do t=e.prev[--n],e.prev[n]=t>=_?t-_:0;while(--i)};let HASH_ZLIB=(e,i,t)=>(i<<e.hash_shift^t)&e.hash_mask,HASH=HASH_ZLIB;const flush_pending=e=>{const i=e.state;let t=i.pending;t>e.avail_out&&(t=e.avail_out),t!==0&&(e.output.set(i.pending_buf.subarray(i.pending_out,i.pending_out+t),e.next_out),e.next_out+=t,i.pending_out+=t,e.total_out+=t,e.avail_out-=t,i.pending-=t,i.pending===0&&(i.pending_out=0))},flush_block_only=(e,i)=>{_tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,i),e.block_start=e.strstart,flush_pending(e.strm)},put_byte=(e,i)=>{e.pending_buf[e.pending++]=i},putShortMSB=(e,i)=>{e.pending_buf[e.pending++]=i>>>8&255,e.pending_buf[e.pending++]=i&255},read_buf=(e,i,t,n)=>{let _=e.avail_in;return _>n&&(_=n),_===0?0:(e.avail_in-=_,i.set(e.input.subarray(e.next_in,e.next_in+_),t),e.state.wrap===1?e.adler=adler32_1(e.adler,i,_,t):e.state.wrap===2&&(e.adler=crc32_1(e.adler,i,_,t)),e.next_in+=_,e.total_in+=_,_)},longest_match=(e,i)=>{let t=e.max_chain_length,n=e.strstart,_,a,f=e.prev_length,r=e.nice_match;const u=e.strstart>e.w_size-MIN_LOOKAHEAD?e.strstart-(e.w_size-MIN_LOOKAHEAD):0,l=e.window,o=e.w_mask,S=e.prev,c=e.strstart+MAX_MATCH;let d=l[n+f-1],E=l[n+f];e.prev_length>=e.good_match&&(t>>=2),r>e.lookahead&&(r=e.lookahead);do if(_=i,!(l[_+f]!==E||l[_+f-1]!==d||l[_]!==l[n]||l[++_]!==l[n+1])){n+=2,_++;do;while(l[++n]===l[++_]&&l[++n]===l[++_]&&l[++n]===l[++_]&&l[++n]===l[++_]&&l[++n]===l[++_]&&l[++n]===l[++_]&&l[++n]===l[++_]&&l[++n]===l[++_]&&n<c);if(a=MAX_MATCH-(c-n),n=c-MAX_MATCH,a>f){if(e.match_start=i,f=a,a>=r)break;d=l[n+f-1],E=l[n+f]}}while((i=S[i&o])>u&&--t!==0);return f<=e.lookahead?f:e.lookahead},fill_window=e=>{const i=e.w_size;let t,n,_;do{if(n=e.window_size-e.lookahead-e.strstart,e.strstart>=i+(i-MIN_LOOKAHEAD)&&(e.window.set(e.window.subarray(i,i+i-n),0),e.match_start-=i,e.strstart-=i,e.block_start-=i,e.insert>e.strstart&&(e.insert=e.strstart),slide_hash(e),n+=i),e.strm.avail_in===0)break;if(t=read_buf(e.strm,e.window,e.strstart+e.lookahead,n),e.lookahead+=t,e.lookahead+e.insert>=MIN_MATCH)for(_=e.strstart-e.insert,e.ins_h=e.window[_],e.ins_h=HASH(e,e.ins_h,e.window[_+1]);e.insert&&(e.ins_h=HASH(e,e.ins_h,e.window[_+MIN_MATCH-1]),e.prev[_&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=_,_++,e.insert--,!(e.lookahead+e.insert<MIN_MATCH)););}while(e.lookahead<MIN_LOOKAHEAD&&e.strm.avail_in!==0)},deflate_stored=(e,i)=>{let t=e.pending_buf_size-5>e.w_size?e.w_size:e.pending_buf_size-5,n,_,a,f=0,r=e.strm.avail_in;do{if(n=65535,a=e.bi_valid+42>>3,e.strm.avail_out<a||(a=e.strm.avail_out-a,_=e.strstart-e.block_start,n>_+e.strm.avail_in&&(n=_+e.strm.avail_in),n>a&&(n=a),n<t&&(n===0&&i!==Z_FINISH$3||i===Z_NO_FLUSH$2||n!==_+e.strm.avail_in)))break;f=i===Z_FINISH$3&&n===_+e.strm.avail_in?1:0,_tr_stored_block(e,0,0,f),e.pending_buf[e.pending-4]=n,e.pending_buf[e.pending-3]=n>>8,e.pending_buf[e.pending-2]=~n,e.pending_buf[e.pending-1]=~n>>8,flush_pending(e.strm),_&&(_>n&&(_=n),e.strm.output.set(e.window.subarray(e.block_start,e.block_start+_),e.strm.next_out),e.strm.next_out+=_,e.strm.avail_out-=_,e.strm.total_out+=_,e.block_start+=_,n-=_),n&&(read_buf(e.strm,e.strm.output,e.strm.next_out,n),e.strm.next_out+=n,e.strm.avail_out-=n,e.strm.total_out+=n)}while(f===0);return r-=e.strm.avail_in,r&&(r>=e.w_size?(e.matches=2,e.window.set(e.strm.input.subarray(e.strm.next_in-e.w_size,e.strm.next_in),0),e.strstart=e.w_size,e.insert=e.strstart):(e.window_size-e.strstart<=r&&(e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,e.insert>e.strstart&&(e.insert=e.strstart)),e.window.set(e.strm.input.subarray(e.strm.next_in-r,e.strm.next_in),e.strstart),e.strstart+=r,e.insert+=r>e.w_size-e.insert?e.w_size-e.insert:r),e.block_start=e.strstart),e.high_water<e.strstart&&(e.high_water=e.strstart),f?BS_FINISH_DONE:i!==Z_NO_FLUSH$2&&i!==Z_FINISH$3&&e.strm.avail_in===0&&e.strstart===e.block_start?BS_BLOCK_DONE:(a=e.window_size-e.strstart,e.strm.avail_in>a&&e.block_start>=e.w_size&&(e.block_start-=e.w_size,e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,a+=e.w_size,e.insert>e.strstart&&(e.insert=e.strstart)),a>e.strm.avail_in&&(a=e.strm.avail_in),a&&(read_buf(e.strm,e.window,e.strstart,a),e.strstart+=a,e.insert+=a>e.w_size-e.insert?e.w_size-e.insert:a),e.high_water<e.strstart&&(e.high_water=e.strstart),a=e.bi_valid+42>>3,a=e.pending_buf_size-a>65535?65535:e.pending_buf_size-a,t=a>e.w_size?e.w_size:a,_=e.strstart-e.block_start,(_>=t||(_||i===Z_FINISH$3)&&i!==Z_NO_FLUSH$2&&e.strm.avail_in===0&&_<=a)&&(n=_>a?a:_,f=i===Z_FINISH$3&&e.strm.avail_in===0&&n===_?1:0,_tr_stored_block(e,e.block_start,n,f),e.block_start+=n,flush_pending(e.strm)),f?BS_FINISH_STARTED:BS_NEED_MORE)},deflate_fast=(e,i)=>{let t,n;for(;;){if(e.lookahead<MIN_LOOKAHEAD){if(fill_window(e),e.lookahead<MIN_LOOKAHEAD&&i===Z_NO_FLUSH$2)return BS_NEED_MORE;if(e.lookahead===0)break}if(t=0,e.lookahead>=MIN_MATCH&&(e.ins_h=HASH(e,e.ins_h,e.window[e.strstart+MIN_MATCH-1]),t=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),t!==0&&e.strstart-t<=e.w_size-MIN_LOOKAHEAD&&(e.match_length=longest_match(e,t)),e.match_length>=MIN_MATCH)if(n=_tr_tally(e,e.strstart-e.match_start,e.match_length-MIN_MATCH),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=MIN_MATCH){e.match_length--;do e.strstart++,e.ins_h=HASH(e,e.ins_h,e.window[e.strstart+MIN_MATCH-1]),t=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart;while(--e.match_length!==0);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=HASH(e,e.ins_h,e.window[e.strstart+1]);else n=_tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(flush_block_only(e,!1),e.strm.avail_out===0))return BS_NEED_MORE}return e.insert=e.strstart<MIN_MATCH-1?e.strstart:MIN_MATCH-1,i===Z_FINISH$3?(flush_block_only(e,!0),e.strm.avail_out===0?BS_FINISH_STARTED:BS_FINISH_DONE):e.sym_next&&(flush_block_only(e,!1),e.strm.avail_out===0)?BS_NEED_MORE:BS_BLOCK_DONE},deflate_slow=(e,i)=>{let t,n,_;for(;;){if(e.lookahead<MIN_LOOKAHEAD){if(fill_window(e),e.lookahead<MIN_LOOKAHEAD&&i===Z_NO_FLUSH$2)return BS_NEED_MORE;if(e.lookahead===0)break}if(t=0,e.lookahead>=MIN_MATCH&&(e.ins_h=HASH(e,e.ins_h,e.window[e.strstart+MIN_MATCH-1]),t=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=MIN_MATCH-1,t!==0&&e.prev_length<e.max_lazy_match&&e.strstart-t<=e.w_size-MIN_LOOKAHEAD&&(e.match_length=longest_match(e,t),e.match_length<=5&&(e.strategy===Z_FILTERED||e.match_length===MIN_MATCH&&e.strstart-e.match_start>4096)&&(e.match_length=MIN_MATCH-1)),e.prev_length>=MIN_MATCH&&e.match_length<=e.prev_length){_=e.strstart+e.lookahead-MIN_MATCH,n=_tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-MIN_MATCH),e.lookahead-=e.prev_length-1,e.prev_length-=2;do++e.strstart<=_&&(e.ins_h=HASH(e,e.ins_h,e.window[e.strstart+MIN_MATCH-1]),t=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart);while(--e.prev_length!==0);if(e.match_available=0,e.match_length=MIN_MATCH-1,e.strstart++,n&&(flush_block_only(e,!1),e.strm.avail_out===0))return BS_NEED_MORE}else if(e.match_available){if(n=_tr_tally(e,0,e.window[e.strstart-1]),n&&flush_block_only(e,!1),e.strstart++,e.lookahead--,e.strm.avail_out===0)return BS_NEED_MORE}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=_tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<MIN_MATCH-1?e.strstart:MIN_MATCH-1,i===Z_FINISH$3?(flush_block_only(e,!0),e.strm.avail_out===0?BS_FINISH_STARTED:BS_FINISH_DONE):e.sym_next&&(flush_block_only(e,!1),e.strm.avail_out===0)?BS_NEED_MORE:BS_BLOCK_DONE},deflate_rle=(e,i)=>{let t,n,_,a;const f=e.window;for(;;){if(e.lookahead<=MAX_MATCH){if(fill_window(e),e.lookahead<=MAX_MATCH&&i===Z_NO_FLUSH$2)return BS_NEED_MORE;if(e.lookahead===0)break}if(e.match_length=0,e.lookahead>=MIN_MATCH&&e.strstart>0&&(_=e.strstart-1,n=f[_],n===f[++_]&&n===f[++_]&&n===f[++_])){a=e.strstart+MAX_MATCH;do;while(n===f[++_]&&n===f[++_]&&n===f[++_]&&n===f[++_]&&n===f[++_]&&n===f[++_]&&n===f[++_]&&n===f[++_]&&_<a);e.match_length=MAX_MATCH-(a-_),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=MIN_MATCH?(t=_tr_tally(e,1,e.match_length-MIN_MATCH),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(t=_tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),t&&(flush_block_only(e,!1),e.strm.avail_out===0))return BS_NEED_MORE}return e.insert=0,i===Z_FINISH$3?(flush_block_only(e,!0),e.strm.avail_out===0?BS_FINISH_STARTED:BS_FINISH_DONE):e.sym_next&&(flush_block_only(e,!1),e.strm.avail_out===0)?BS_NEED_MORE:BS_BLOCK_DONE},deflate_huff=(e,i)=>{let t;for(;;){if(e.lookahead===0&&(fill_window(e),e.lookahead===0)){if(i===Z_NO_FLUSH$2)return BS_NEED_MORE;break}if(e.match_length=0,t=_tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,t&&(flush_block_only(e,!1),e.strm.avail_out===0))return BS_NEED_MORE}return e.insert=0,i===Z_FINISH$3?(flush_block_only(e,!0),e.strm.avail_out===0?BS_FINISH_STARTED:BS_FINISH_DONE):e.sym_next&&(flush_block_only(e,!1),e.strm.avail_out===0)?BS_NEED_MORE:BS_BLOCK_DONE};function Config(e,i,t,n,_){this.good_length=e,this.max_lazy=i,this.nice_length=t,this.max_chain=n,this.func=_}const configuration_table=[new Config(0,0,0,0,deflate_stored),new Config(4,4,8,4,deflate_fast),new Config(4,5,16,8,deflate_fast),new Config(4,6,32,32,deflate_fast),new Config(4,4,16,16,deflate_slow),new Config(8,16,32,32,deflate_slow),new Config(8,16,128,128,deflate_slow),new Config(8,32,128,256,deflate_slow),new Config(32,128,258,1024,deflate_slow),new Config(32,258,258,4096,deflate_slow)],lm_init=e=>{e.window_size=2*e.w_size,zero(e.head),e.max_lazy_match=configuration_table[e.level].max_lazy,e.good_match=configuration_table[e.level].good_length,e.nice_match=configuration_table[e.level].nice_length,e.max_chain_length=configuration_table[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=MIN_MATCH-1,e.match_available=0,e.ins_h=0};function DeflateState(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=Z_DEFLATED$2,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(HEAP_SIZE*2),this.dyn_dtree=new Uint16Array((2*D_CODES+1)*2),this.bl_tree=new Uint16Array((2*BL_CODES+1)*2),zero(this.dyn_ltree),zero(this.dyn_dtree),zero(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(MAX_BITS+1),this.heap=new Uint16Array(2*L_CODES+1),zero(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(2*L_CODES+1),zero(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const deflateStateCheck=e=>{if(!e)return 1;const i=e.state;return!i||i.strm!==e||i.status!==INIT_STATE&&i.status!==GZIP_STATE&&i.status!==EXTRA_STATE&&i.status!==NAME_STATE&&i.status!==COMMENT_STATE&&i.status!==HCRC_STATE&&i.status!==BUSY_STATE&&i.status!==FINISH_STATE?1:0},deflateResetKeep=e=>{if(deflateStateCheck(e))return err(e,Z_STREAM_ERROR$2);e.total_in=e.total_out=0,e.data_type=Z_UNKNOWN;const i=e.state;return i.pending=0,i.pending_out=0,i.wrap<0&&(i.wrap=-i.wrap),i.status=i.wrap===2?GZIP_STATE:i.wrap?INIT_STATE:BUSY_STATE,e.adler=i.wrap===2?0:1,i.last_flush=-2,_tr_init(i),Z_OK$3},deflateReset=e=>{const i=deflateResetKeep(e);return i===Z_OK$3&&lm_init(e.state),i},deflateSetHeader=(e,i)=>deflateStateCheck(e)||e.state.wrap!==2?Z_STREAM_ERROR$2:(e.state.gzhead=i,Z_OK$3),deflateInit2=(e,i,t,n,_,a)=>{if(!e)return Z_STREAM_ERROR$2;let f=1;if(i===Z_DEFAULT_COMPRESSION$1&&(i=6),n<0?(f=0,n=-n):n>15&&(f=2,n-=16),_<1||_>MAX_MEM_LEVEL||t!==Z_DEFLATED$2||n<8||n>15||i<0||i>9||a<0||a>Z_FIXED||n===8&&f!==1)return err(e,Z_STREAM_ERROR$2);n===8&&(n=9);const r=new DeflateState;return e.state=r,r.strm=e,r.status=INIT_STATE,r.wrap=f,r.gzhead=null,r.w_bits=n,r.w_size=1<<r.w_bits,r.w_mask=r.w_size-1,r.hash_bits=_+7,r.hash_size=1<<r.hash_bits,r.hash_mask=r.hash_size-1,r.hash_shift=~~((r.hash_bits+MIN_MATCH-1)/MIN_MATCH),r.window=new Uint8Array(r.w_size*2),r.head=new Uint16Array(r.hash_size),r.prev=new Uint16Array(r.w_size),r.lit_bufsize=1<<_+6,r.pending_buf_size=r.lit_bufsize*4,r.pending_buf=new Uint8Array(r.pending_buf_size),r.sym_buf=r.lit_bufsize,r.sym_end=(r.lit_bufsize-1)*3,r.level=i,r.strategy=a,r.method=t,deflateReset(e)},deflateInit=(e,i)=>deflateInit2(e,i,Z_DEFLATED$2,MAX_WBITS$1,DEF_MEM_LEVEL,Z_DEFAULT_STRATEGY$1),deflate$2=(e,i)=>{if(deflateStateCheck(e)||i>Z_BLOCK$1||i<0)return e?err(e,Z_STREAM_ERROR$2):Z_STREAM_ERROR$2;const t=e.state;if(!e.output||e.avail_in!==0&&!e.input||t.status===FINISH_STATE&&i!==Z_FINISH$3)return err(e,e.avail_out===0?Z_BUF_ERROR$1:Z_STREAM_ERROR$2);const n=t.last_flush;if(t.last_flush=i,t.pending!==0){if(flush_pending(e),e.avail_out===0)return t.last_flush=-1,Z_OK$3}else if(e.avail_in===0&&rank(i)<=rank(n)&&i!==Z_FINISH$3)return err(e,Z_BUF_ERROR$1);if(t.status===FINISH_STATE&&e.avail_in!==0)return err(e,Z_BUF_ERROR$1);if(t.status===INIT_STATE&&t.wrap===0&&(t.status=BUSY_STATE),t.status===INIT_STATE){let _=Z_DEFLATED$2+(t.w_bits-8<<4)<<8,a=-1;if(t.strategy>=Z_HUFFMAN_ONLY||t.level<2?a=0:t.level<6?a=1:t.level===6?a=2:a=3,_|=a<<6,t.strstart!==0&&(_|=PRESET_DICT),_+=31-_%31,putShortMSB(t,_),t.strstart!==0&&(putShortMSB(t,e.adler>>>16),putShortMSB(t,e.adler&65535)),e.adler=1,t.status=BUSY_STATE,flush_pending(e),t.pending!==0)return t.last_flush=-1,Z_OK$3}if(t.status===GZIP_STATE){if(e.adler=0,put_byte(t,31),put_byte(t,139),put_byte(t,8),t.gzhead)put_byte(t,(t.gzhead.text?1:0)+(t.gzhead.hcrc?2:0)+(t.gzhead.extra?4:0)+(t.gzhead.name?8:0)+(t.gzhead.comment?16:0)),put_byte(t,t.gzhead.time&255),put_byte(t,t.gzhead.time>>8&255),put_byte(t,t.gzhead.time>>16&255),put_byte(t,t.gzhead.time>>24&255),put_byte(t,t.level===9?2:t.strategy>=Z_HUFFMAN_ONLY||t.level<2?4:0),put_byte(t,t.gzhead.os&255),t.gzhead.extra&&t.gzhead.extra.length&&(put_byte(t,t.gzhead.extra.length&255),put_byte(t,t.gzhead.extra.length>>8&255)),t.gzhead.hcrc&&(e.adler=crc32_1(e.adler,t.pending_buf,t.pending,0)),t.gzindex=0,t.status=EXTRA_STATE;else if(put_byte(t,0),put_byte(t,0),put_byte(t,0),put_byte(t,0),put_byte(t,0),put_byte(t,t.level===9?2:t.strategy>=Z_HUFFMAN_ONLY||t.level<2?4:0),put_byte(t,OS_CODE),t.status=BUSY_STATE,flush_pending(e),t.pending!==0)return t.last_flush=-1,Z_OK$3}if(t.status===EXTRA_STATE){if(t.gzhead.extra){let _=t.pending,a=(t.gzhead.extra.length&65535)-t.gzindex;for(;t.pending+a>t.pending_buf_size;){let r=t.pending_buf_size-t.pending;if(t.pending_buf.set(t.gzhead.extra.subarray(t.gzindex,t.gzindex+r),t.pending),t.pending=t.pending_buf_size,t.gzhead.hcrc&&t.pending>_&&(e.adler=crc32_1(e.adler,t.pending_buf,t.pending-_,_)),t.gzindex+=r,flush_pending(e),t.pending!==0)return t.last_flush=-1,Z_OK$3;_=0,a-=r}let f=new Uint8Array(t.gzhead.extra);t.pending_buf.set(f.subarray(t.gzindex,t.gzindex+a),t.pending),t.pending+=a,t.gzhead.hcrc&&t.pending>_&&(e.adler=crc32_1(e.adler,t.pending_buf,t.pending-_,_)),t.gzindex=0}t.status=NAME_STATE}if(t.status===NAME_STATE){if(t.gzhead.name){let _=t.pending,a;do{if(t.pending===t.pending_buf_size){if(t.gzhead.hcrc&&t.pending>_&&(e.adler=crc32_1(e.adler,t.pending_buf,t.pending-_,_)),flush_pending(e),t.pending!==0)return t.last_flush=-1,Z_OK$3;_=0}t.gzindex<t.gzhead.name.length?a=t.gzhead.name.charCodeAt(t.gzindex++)&255:a=0,put_byte(t,a)}while(a!==0);t.gzhead.hcrc&&t.pending>_&&(e.adler=crc32_1(e.adler,t.pending_buf,t.pending-_,_)),t.gzindex=0}t.status=COMMENT_STATE}if(t.status===COMMENT_STATE){if(t.gzhead.comment){let _=t.pending,a;do{if(t.pending===t.pending_buf_size){if(t.gzhead.hcrc&&t.pending>_&&(e.adler=crc32_1(e.adler,t.pending_buf,t.pending-_,_)),flush_pending(e),t.pending!==0)return t.last_flush=-1,Z_OK$3;_=0}t.gzindex<t.gzhead.comment.length?a=t.gzhead.comment.charCodeAt(t.gzindex++)&255:a=0,put_byte(t,a)}while(a!==0);t.gzhead.hcrc&&t.pending>_&&(e.adler=crc32_1(e.adler,t.pending_buf,t.pending-_,_))}t.status=HCRC_STATE}if(t.status===HCRC_STATE){if(t.gzhead.hcrc){if(t.pending+2>t.pending_buf_size&&(flush_pending(e),t.pending!==0))return t.last_flush=-1,Z_OK$3;put_byte(t,e.adler&255),put_byte(t,e.adler>>8&255),e.adler=0}if(t.status=BUSY_STATE,flush_pending(e),t.pending!==0)return t.last_flush=-1,Z_OK$3}if(e.avail_in!==0||t.lookahead!==0||i!==Z_NO_FLUSH$2&&t.status!==FINISH_STATE){let _=t.level===0?deflate_stored(t,i):t.strategy===Z_HUFFMAN_ONLY?deflate_huff(t,i):t.strategy===Z_RLE?deflate_rle(t,i):configuration_table[t.level].func(t,i);if((_===BS_FINISH_STARTED||_===BS_FINISH_DONE)&&(t.status=FINISH_STATE),_===BS_NEED_MORE||_===BS_FINISH_STARTED)return e.avail_out===0&&(t.last_flush=-1),Z_OK$3;if(_===BS_BLOCK_DONE&&(i===Z_PARTIAL_FLUSH?_tr_align(t):i!==Z_BLOCK$1&&(_tr_stored_block(t,0,0,!1),i===Z_FULL_FLUSH$1&&(zero(t.head),t.lookahead===0&&(t.strstart=0,t.block_start=0,t.insert=0))),flush_pending(e),e.avail_out===0))return t.last_flush=-1,Z_OK$3}return i!==Z_FINISH$3?Z_OK$3:t.wrap<=0?Z_STREAM_END$3:(t.wrap===2?(put_byte(t,e.adler&255),put_byte(t,e.adler>>8&255),put_byte(t,e.adler>>16&255),put_byte(t,e.adler>>24&255),put_byte(t,e.total_in&255),put_byte(t,e.total_in>>8&255),put_byte(t,e.total_in>>16&255),put_byte(t,e.total_in>>24&255)):(putShortMSB(t,e.adler>>>16),putShortMSB(t,e.adler&65535)),flush_pending(e),t.wrap>0&&(t.wrap=-t.wrap),t.pending!==0?Z_OK$3:Z_STREAM_END$3)},deflateEnd=e=>{if(deflateStateCheck(e))return Z_STREAM_ERROR$2;const i=e.state.status;return e.state=null,i===BUSY_STATE?err(e,Z_DATA_ERROR$2):Z_OK$3},deflateSetDictionary=(e,i)=>{let t=i.length;if(deflateStateCheck(e))return Z_STREAM_ERROR$2;const n=e.state,_=n.wrap;if(_===2||_===1&&n.status!==INIT_STATE||n.lookahead)return Z_STREAM_ERROR$2;if(_===1&&(e.adler=adler32_1(e.adler,i,t,0)),n.wrap=0,t>=n.w_size){_===0&&(zero(n.head),n.strstart=0,n.block_start=0,n.insert=0);let u=new Uint8Array(n.w_size);u.set(i.subarray(t-n.w_size,t),0),i=u,t=n.w_size}const a=e.avail_in,f=e.next_in,r=e.input;for(e.avail_in=t,e.next_in=0,e.input=i,fill_window(n);n.lookahead>=MIN_MATCH;){let u=n.strstart,l=n.lookahead-(MIN_MATCH-1);do n.ins_h=HASH(n,n.ins_h,n.window[u+MIN_MATCH-1]),n.prev[u&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=u,u++;while(--l);n.strstart=u,n.lookahead=MIN_MATCH-1,fill_window(n)}return n.strstart+=n.lookahead,n.block_start=n.strstart,n.insert=n.lookahead,n.lookahead=0,n.match_length=n.prev_length=MIN_MATCH-1,n.match_available=0,e.next_in=f,e.input=r,e.avail_in=a,n.wrap=_,Z_OK$3};var deflateInit_1=deflateInit,deflateInit2_1=deflateInit2,deflateReset_1=deflateReset,deflateResetKeep_1=deflateResetKeep,deflateSetHeader_1=deflateSetHeader,deflate_2$1=deflate$2,deflateEnd_1=deflateEnd,deflateSetDictionary_1=deflateSetDictionary,deflateInfo="pako deflate (from Nodeca project)",deflate_1$2={deflateInit:deflateInit_1,deflateInit2:deflateInit2_1,deflateReset:deflateReset_1,deflateResetKeep:deflateResetKeep_1,deflateSetHeader:deflateSetHeader_1,deflate:deflate_2$1,deflateEnd:deflateEnd_1,deflateSetDictionary:deflateSetDictionary_1,deflateInfo};const _has=(e,i)=>Object.prototype.hasOwnProperty.call(e,i);var assign=function(e){const i=Array.prototype.slice.call(arguments,1);for(;i.length;){const t=i.shift();if(t){if(typeof t!="object")throw new TypeError(t+"must be non-object");for(const n in t)_has(t,n)&&(e[n]=t[n])}}return e},flattenChunks=e=>{let i=0;for(let n=0,_=e.length;n<_;n++)i+=e[n].length;const t=new Uint8Array(i);for(let n=0,_=0,a=e.length;n<a;n++){let f=e[n];t.set(f,_),_+=f.length}return t},common={assign,flattenChunks};let STR_APPLY_UIA_OK=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch{STR_APPLY_UIA_OK=!1}const _utf8len=new Uint8Array(256);for(let e=0;e<256;e++)_utf8len[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;_utf8len[254]=_utf8len[254]=1;var string2buf=e=>{if(typeof TextEncoder=="function"&&TextEncoder.prototype.encode)return new TextEncoder().encode(e);let i,t,n,_,a,f=e.length,r=0;for(_=0;_<f;_++)t=e.charCodeAt(_),(t&64512)===55296&&_+1<f&&(n=e.charCodeAt(_+1),(n&64512)===56320&&(t=65536+(t-55296<<10)+(n-56320),_++)),r+=t<128?1:t<2048?2:t<65536?3:4;for(i=new Uint8Array(r),a=0,_=0;a<r;_++)t=e.charCodeAt(_),(t&64512)===55296&&_+1<f&&(n=e.charCodeAt(_+1),(n&64512)===56320&&(t=65536+(t-55296<<10)+(n-56320),_++)),t<128?i[a++]=t:t<2048?(i[a++]=192|t>>>6,i[a++]=128|t&63):t<65536?(i[a++]=224|t>>>12,i[a++]=128|t>>>6&63,i[a++]=128|t&63):(i[a++]=240|t>>>18,i[a++]=128|t>>>12&63,i[a++]=128|t>>>6&63,i[a++]=128|t&63);return i};const buf2binstring=(e,i)=>{if(i<65534&&e.subarray&&STR_APPLY_UIA_OK)return String.fromCharCode.apply(null,e.length===i?e:e.subarray(0,i));let t="";for(let n=0;n<i;n++)t+=String.fromCharCode(e[n]);return t};var buf2string=(e,i)=>{const t=i||e.length;if(typeof TextDecoder=="function"&&TextDecoder.prototype.decode)return new TextDecoder().decode(e.subarray(0,i));let n,_;const a=new Array(t*2);for(_=0,n=0;n<t;){let f=e[n++];if(f<128){a[_++]=f;continue}let r=_utf8len[f];if(r>4){a[_++]=65533,n+=r-1;continue}for(f&=r===2?31:r===3?15:7;r>1&&n<t;)f=f<<6|e[n++]&63,r--;if(r>1){a[_++]=65533;continue}f<65536?a[_++]=f:(f-=65536,a[_++]=55296|f>>10&1023,a[_++]=56320|f&1023)}return buf2binstring(a,_)},utf8border=(e,i)=>{i=i||e.length,i>e.length&&(i=e.length);let t=i-1;for(;t>=0&&(e[t]&192)===128;)t--;return t<0||t===0?i:t+_utf8len[e[t]]>i?t:i},strings={string2buf,buf2string,utf8border};function ZStream(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var zstream=ZStream;const toString$1=Object.prototype.toString,{Z_NO_FLUSH:Z_NO_FLUSH$1,Z_SYNC_FLUSH,Z_FULL_FLUSH,Z_FINISH:Z_FINISH$2,Z_OK:Z_OK$2,Z_STREAM_END:Z_STREAM_END$2,Z_DEFAULT_COMPRESSION,Z_DEFAULT_STRATEGY,Z_DEFLATED:Z_DEFLATED$1}=constants$2;function Deflate$1(e){this.options=common.assign({level:Z_DEFAULT_COMPRESSION,method:Z_DEFLATED$1,chunkSize:16384,windowBits:15,memLevel:8,strategy:Z_DEFAULT_STRATEGY},e||{});let i=this.options;i.raw&&i.windowBits>0?i.windowBits=-i.windowBits:i.gzip&&i.windowBits>0&&i.windowBits<16&&(i.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0;let t=deflate_1$2.deflateInit2(this.strm,i.level,i.method,i.windowBits,i.memLevel,i.strategy);if(t!==Z_OK$2)throw new Error(messages[t]);if(i.header&&deflate_1$2.deflateSetHeader(this.strm,i.header),i.dictionary){let n;if(typeof i.dictionary=="string"?n=strings.string2buf(i.dictionary):toString$1.call(i.dictionary)==="[object ArrayBuffer]"?n=new Uint8Array(i.dictionary):n=i.dictionary,t=deflate_1$2.deflateSetDictionary(this.strm,n),t!==Z_OK$2)throw new Error(messages[t]);this._dict_set=!0}}Deflate$1.prototype.push=function(e,i){const t=this.strm,n=this.options.chunkSize;let _,a;if(this.ended)return!1;for(i===~~i?a=i:a=i===!0?Z_FINISH$2:Z_NO_FLUSH$1,typeof e=="string"?t.input=strings.string2buf(e):toString$1.call(e)==="[object ArrayBuffer]"?t.input=new Uint8Array(e):t.input=e,t.next_in=0,t.avail_in=t.input.length;;){if(t.avail_out===0&&(t.output=new Uint8Array(n),t.next_out=0,t.avail_out=n),(a===Z_SYNC_FLUSH||a===Z_FULL_FLUSH)&&t.avail_out<=6){this.onData(t.output.subarray(0,t.next_out)),t.avail_out=0;continue}if(_=deflate_1$2.deflate(t,a),_===Z_STREAM_END$2)return t.next_out>0&&this.onData(t.output.subarray(0,t.next_out)),_=deflate_1$2.deflateEnd(this.strm),this.onEnd(_),this.ended=!0,_===Z_OK$2;if(t.avail_out===0){this.onData(t.output);continue}if(a>0&&t.next_out>0){this.onData(t.output.subarray(0,t.next_out)),t.avail_out=0;continue}if(t.avail_in===0)break}return!0};Deflate$1.prototype.onData=function(e){this.chunks.push(e)};Deflate$1.prototype.onEnd=function(e){e===Z_OK$2&&(this.result=common.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function deflate$1(e,i){const t=new Deflate$1(i);if(t.push(e,!0),t.err)throw t.msg||messages[t.err];return t.result}function deflateRaw$1(e,i){return i=i||{},i.raw=!0,deflate$1(e,i)}function gzip$1(e,i){return i=i||{},i.gzip=!0,deflate$1(e,i)}var Deflate_1$1=Deflate$1,deflate_2=deflate$1,deflateRaw_1$1=deflateRaw$1,gzip_1$1=gzip$1,constants$1=constants$2,deflate_1$1={Deflate:Deflate_1$1,deflate:deflate_2,deflateRaw:deflateRaw_1$1,gzip:gzip_1$1,constants:constants$1};const BAD$1=16209,TYPE$1=16191;var inffast=function(i,t){let n,_,a,f,r,u,l,o,S,c,d,E,k,A,w,D,p,h,R,O,b,I,x,g;const T=i.state;n=i.next_in,x=i.input,_=n+(i.avail_in-5),a=i.next_out,g=i.output,f=a-(t-i.avail_out),r=a+(i.avail_out-257),u=T.dmax,l=T.wsize,o=T.whave,S=T.wnext,c=T.window,d=T.hold,E=T.bits,k=T.lencode,A=T.distcode,w=(1<<T.lenbits)-1,D=(1<<T.distbits)-1;e:do{E<15&&(d+=x[n++]<<E,E+=8,d+=x[n++]<<E,E+=8),p=k[d&w];t:for(;;){if(h=p>>>24,d>>>=h,E-=h,h=p>>>16&255,h===0)g[a++]=p&65535;else if(h&16){R=p&65535,h&=15,h&&(E<h&&(d+=x[n++]<<E,E+=8),R+=d&(1<<h)-1,d>>>=h,E-=h),E<15&&(d+=x[n++]<<E,E+=8,d+=x[n++]<<E,E+=8),p=A[d&D];i:for(;;){if(h=p>>>24,d>>>=h,E-=h,h=p>>>16&255,h&16){if(O=p&65535,h&=15,E<h&&(d+=x[n++]<<E,E+=8,E<h&&(d+=x[n++]<<E,E+=8)),O+=d&(1<<h)-1,O>u){i.msg="invalid distance too far back",T.mode=BAD$1;break e}if(d>>>=h,E-=h,h=a-f,O>h){if(h=O-h,h>o&&T.sane){i.msg="invalid distance too far back",T.mode=BAD$1;break e}if(b=0,I=c,S===0){if(b+=l-h,h<R){R-=h;do g[a++]=c[b++];while(--h);b=a-O,I=g}}else if(S<h){if(b+=l+S-h,h-=S,h<R){R-=h;do g[a++]=c[b++];while(--h);if(b=0,S<R){h=S,R-=h;do g[a++]=c[b++];while(--h);b=a-O,I=g}}}else if(b+=S-h,h<R){R-=h;do g[a++]=c[b++];while(--h);b=a-O,I=g}for(;R>2;)g[a++]=I[b++],g[a++]=I[b++],g[a++]=I[b++],R-=3;R&&(g[a++]=I[b++],R>1&&(g[a++]=I[b++]))}else{b=a-O;do g[a++]=g[b++],g[a++]=g[b++],g[a++]=g[b++],R-=3;while(R>2);R&&(g[a++]=g[b++],R>1&&(g[a++]=g[b++]))}}else if(h&64){i.msg="invalid distance code",T.mode=BAD$1;break e}else{p=A[(p&65535)+(d&(1<<h)-1)];continue i}break}}else if(h&64)if(h&32){T.mode=TYPE$1;break e}else{i.msg="invalid literal/length code",T.mode=BAD$1;break e}else{p=k[(p&65535)+(d&(1<<h)-1)];continue t}break}}while(n<_&&a<r);R=E>>3,n-=R,E-=R<<3,d&=(1<<E)-1,i.next_in=n,i.next_out=a,i.avail_in=n<_?5+(_-n):5-(n-_),i.avail_out=a<r?257+(r-a):257-(a-r),T.hold=d,T.bits=E};const MAXBITS=15,ENOUGH_LENS$1=852,ENOUGH_DISTS$1=592,CODES$1=0,LENS$1=1,DISTS$1=2,lbase=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),lext=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),dbase=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),dext=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]),inflate_table=(e,i,t,n,_,a,f,r)=>{const u=r.bits;let l=0,o=0,S=0,c=0,d=0,E=0,k=0,A=0,w=0,D=0,p,h,R,O,b,I=null,x;const g=new Uint16Array(MAXBITS+1),T=new Uint16Array(MAXBITS+1);let N=null,y,v,$;for(l=0;l<=MAXBITS;l++)g[l]=0;for(o=0;o<n;o++)g[i[t+o]]++;for(d=u,c=MAXBITS;c>=1&&g[c]===0;c--);if(d>c&&(d=c),c===0)return _[a++]=1<<24|64<<16|0,_[a++]=1<<24|64<<16|0,r.bits=1,0;for(S=1;S<c&&g[S]===0;S++);for(d<S&&(d=S),A=1,l=1;l<=MAXBITS;l++)if(A<<=1,A-=g[l],A<0)return-1;if(A>0&&(e===CODES$1||c!==1))return-1;for(T[1]=0,l=1;l<MAXBITS;l++)T[l+1]=T[l]+g[l];for(o=0;o<n;o++)i[t+o]!==0&&(f[T[i[t+o]]++]=o);if(e===CODES$1?(I=N=f,x=20):e===LENS$1?(I=lbase,N=lext,x=257):(I=dbase,N=dext,x=0),D=0,o=0,l=S,b=a,E=d,k=0,R=-1,w=1<<d,O=w-1,e===LENS$1&&w>ENOUGH_LENS$1||e===DISTS$1&&w>ENOUGH_DISTS$1)return 1;for(;;){y=l-k,f[o]+1<x?(v=0,$=f[o]):f[o]>=x?(v=N[f[o]-x],$=I[f[o]-x]):(v=96,$=0),p=1<<l-k,h=1<<E,S=h;do h-=p,_[b+(D>>k)+h]=y<<24|v<<16|$|0;while(h!==0);for(p=1<<l-1;D&p;)p>>=1;if(p!==0?(D&=p-1,D+=p):D=0,o++,--g[l]===0){if(l===c)break;l=i[t+f[o]]}if(l>d&&(D&O)!==R){for(k===0&&(k=d),b+=S,E=l-k,A=1<<E;E+k<c&&(A-=g[E+k],!(A<=0));)E++,A<<=1;if(w+=1<<E,e===LENS$1&&w>ENOUGH_LENS$1||e===DISTS$1&&w>ENOUGH_DISTS$1)return 1;R=D&O,_[R]=d<<24|E<<16|b-a|0}}return D!==0&&(_[b+D]=l-k<<24|64<<16|0),r.bits=d,0};var inftrees=inflate_table;const CODES=0,LENS=1,DISTS=2,{Z_FINISH:Z_FINISH$1,Z_BLOCK,Z_TREES,Z_OK:Z_OK$1,Z_STREAM_END:Z_STREAM_END$1,Z_NEED_DICT:Z_NEED_DICT$1,Z_STREAM_ERROR:Z_STREAM_ERROR$1,Z_DATA_ERROR:Z_DATA_ERROR$1,Z_MEM_ERROR:Z_MEM_ERROR$1,Z_BUF_ERROR,Z_DEFLATED}=constants$2,HEAD=16180,FLAGS=16181,TIME=16182,OS=16183,EXLEN=16184,EXTRA=16185,NAME=16186,COMMENT=16187,HCRC=16188,DICTID=16189,DICT=16190,TYPE=16191,TYPEDO=16192,STORED=16193,COPY_=16194,COPY=16195,TABLE=16196,LENLENS=16197,CODELENS=16198,LEN_=16199,LEN=16200,LENEXT=16201,DIST=16202,DISTEXT=16203,MATCH=16204,LIT=16205,CHECK=16206,LENGTH=16207,DONE=16208,BAD=16209,MEM=16210,SYNC=16211,ENOUGH_LENS=852,ENOUGH_DISTS=592,MAX_WBITS=15,DEF_WBITS=MAX_WBITS,zswap32=e=>(e>>>24&255)+(e>>>8&65280)+((e&65280)<<8)+((e&255)<<24);function InflateState(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const inflateStateCheck=e=>{if(!e)return 1;const i=e.state;return!i||i.strm!==e||i.mode<HEAD||i.mode>SYNC?1:0},inflateResetKeep=e=>{if(inflateStateCheck(e))return Z_STREAM_ERROR$1;const i=e.state;return e.total_in=e.total_out=i.total=0,e.msg="",i.wrap&&(e.adler=i.wrap&1),i.mode=HEAD,i.last=0,i.havedict=0,i.flags=-1,i.dmax=32768,i.head=null,i.hold=0,i.bits=0,i.lencode=i.lendyn=new Int32Array(ENOUGH_LENS),i.distcode=i.distdyn=new Int32Array(ENOUGH_DISTS),i.sane=1,i.back=-1,Z_OK$1},inflateReset=e=>{if(inflateStateCheck(e))return Z_STREAM_ERROR$1;const i=e.state;return i.wsize=0,i.whave=0,i.wnext=0,inflateResetKeep(e)},inflateReset2=(e,i)=>{let t;if(inflateStateCheck(e))return Z_STREAM_ERROR$1;const n=e.state;return i<0?(t=0,i=-i):(t=(i>>4)+5,i<48&&(i&=15)),i&&(i<8||i>15)?Z_STREAM_ERROR$1:(n.window!==null&&n.wbits!==i&&(n.window=null),n.wrap=t,n.wbits=i,inflateReset(e))},inflateInit2=(e,i)=>{if(!e)return Z_STREAM_ERROR$1;const t=new InflateState;e.state=t,t.strm=e,t.window=null,t.mode=HEAD;const n=inflateReset2(e,i);return n!==Z_OK$1&&(e.state=null),n},inflateInit=e=>inflateInit2(e,DEF_WBITS);let virgin=!0,lenfix,distfix;const fixedtables=e=>{if(virgin){lenfix=new Int32Array(512),distfix=new Int32Array(32);let i=0;for(;i<144;)e.lens[i++]=8;for(;i<256;)e.lens[i++]=9;for(;i<280;)e.lens[i++]=7;for(;i<288;)e.lens[i++]=8;for(inftrees(LENS,e.lens,0,288,lenfix,0,e.work,{bits:9}),i=0;i<32;)e.lens[i++]=5;inftrees(DISTS,e.lens,0,32,distfix,0,e.work,{bits:5}),virgin=!1}e.lencode=lenfix,e.lenbits=9,e.distcode=distfix,e.distbits=5},updatewindow=(e,i,t,n)=>{let _;const a=e.state;return a.window===null&&(a.wsize=1<<a.wbits,a.wnext=0,a.whave=0,a.window=new Uint8Array(a.wsize)),n>=a.wsize?(a.window.set(i.subarray(t-a.wsize,t),0),a.wnext=0,a.whave=a.wsize):(_=a.wsize-a.wnext,_>n&&(_=n),a.window.set(i.subarray(t-n,t-n+_),a.wnext),n-=_,n?(a.window.set(i.subarray(t-n,t),0),a.wnext=n,a.whave=a.wsize):(a.wnext+=_,a.wnext===a.wsize&&(a.wnext=0),a.whave<a.wsize&&(a.whave+=_))),0},inflate$2=(e,i)=>{let t,n,_,a,f,r,u,l,o,S,c,d,E,k,A=0,w,D,p,h,R,O,b,I;const x=new Uint8Array(4);let g,T;const N=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(inflateStateCheck(e)||!e.output||!e.input&&e.avail_in!==0)return Z_STREAM_ERROR$1;t=e.state,t.mode===TYPE&&(t.mode=TYPEDO),f=e.next_out,_=e.output,u=e.avail_out,a=e.next_in,n=e.input,r=e.avail_in,l=t.hold,o=t.bits,S=r,c=u,I=Z_OK$1;e:for(;;)switch(t.mode){case HEAD:if(t.wrap===0){t.mode=TYPEDO;break}for(;o<16;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}if(t.wrap&2&&l===35615){t.wbits===0&&(t.wbits=15),t.check=0,x[0]=l&255,x[1]=l>>>8&255,t.check=crc32_1(t.check,x,2,0),l=0,o=0,t.mode=FLAGS;break}if(t.head&&(t.head.done=!1),!(t.wrap&1)||(((l&255)<<8)+(l>>8))%31){e.msg="incorrect header check",t.mode=BAD;break}if((l&15)!==Z_DEFLATED){e.msg="unknown compression method",t.mode=BAD;break}if(l>>>=4,o-=4,b=(l&15)+8,t.wbits===0&&(t.wbits=b),b>15||b>t.wbits){e.msg="invalid window size",t.mode=BAD;break}t.dmax=1<<t.wbits,t.flags=0,e.adler=t.check=1,t.mode=l&512?DICTID:TYPE,l=0,o=0;break;case FLAGS:for(;o<16;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}if(t.flags=l,(t.flags&255)!==Z_DEFLATED){e.msg="unknown compression method",t.mode=BAD;break}if(t.flags&57344){e.msg="unknown header flags set",t.mode=BAD;break}t.head&&(t.head.text=l>>8&1),t.flags&512&&t.wrap&4&&(x[0]=l&255,x[1]=l>>>8&255,t.check=crc32_1(t.check,x,2,0)),l=0,o=0,t.mode=TIME;case TIME:for(;o<32;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}t.head&&(t.head.time=l),t.flags&512&&t.wrap&4&&(x[0]=l&255,x[1]=l>>>8&255,x[2]=l>>>16&255,x[3]=l>>>24&255,t.check=crc32_1(t.check,x,4,0)),l=0,o=0,t.mode=OS;case OS:for(;o<16;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}t.head&&(t.head.xflags=l&255,t.head.os=l>>8),t.flags&512&&t.wrap&4&&(x[0]=l&255,x[1]=l>>>8&255,t.check=crc32_1(t.check,x,2,0)),l=0,o=0,t.mode=EXLEN;case EXLEN:if(t.flags&1024){for(;o<16;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}t.length=l,t.head&&(t.head.extra_len=l),t.flags&512&&t.wrap&4&&(x[0]=l&255,x[1]=l>>>8&255,t.check=crc32_1(t.check,x,2,0)),l=0,o=0}else t.head&&(t.head.extra=null);t.mode=EXTRA;case EXTRA:if(t.flags&1024&&(d=t.length,d>r&&(d=r),d&&(t.head&&(b=t.head.extra_len-t.length,t.head.extra||(t.head.extra=new Uint8Array(t.head.extra_len)),t.head.extra.set(n.subarray(a,a+d),b)),t.flags&512&&t.wrap&4&&(t.check=crc32_1(t.check,n,d,a)),r-=d,a+=d,t.length-=d),t.length))break e;t.length=0,t.mode=NAME;case NAME:if(t.flags&2048){if(r===0)break e;d=0;do b=n[a+d++],t.head&&b&&t.length<65536&&(t.head.name+=String.fromCharCode(b));while(b&&d<r);if(t.flags&512&&t.wrap&4&&(t.check=crc32_1(t.check,n,d,a)),r-=d,a+=d,b)break e}else t.head&&(t.head.name=null);t.length=0,t.mode=COMMENT;case COMMENT:if(t.flags&4096){if(r===0)break e;d=0;do b=n[a+d++],t.head&&b&&t.length<65536&&(t.head.comment+=String.fromCharCode(b));while(b&&d<r);if(t.flags&512&&t.wrap&4&&(t.check=crc32_1(t.check,n,d,a)),r-=d,a+=d,b)break e}else t.head&&(t.head.comment=null);t.mode=HCRC;case HCRC:if(t.flags&512){for(;o<16;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}if(t.wrap&4&&l!==(t.check&65535)){e.msg="header crc mismatch",t.mode=BAD;break}l=0,o=0}t.head&&(t.head.hcrc=t.flags>>9&1,t.head.done=!0),e.adler=t.check=0,t.mode=TYPE;break;case DICTID:for(;o<32;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}e.adler=t.check=zswap32(l),l=0,o=0,t.mode=DICT;case DICT:if(t.havedict===0)return e.next_out=f,e.avail_out=u,e.next_in=a,e.avail_in=r,t.hold=l,t.bits=o,Z_NEED_DICT$1;e.adler=t.check=1,t.mode=TYPE;case TYPE:if(i===Z_BLOCK||i===Z_TREES)break e;case TYPEDO:if(t.last){l>>>=o&7,o-=o&7,t.mode=CHECK;break}for(;o<3;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}switch(t.last=l&1,l>>>=1,o-=1,l&3){case 0:t.mode=STORED;break;case 1:if(fixedtables(t),t.mode=LEN_,i===Z_TREES){l>>>=2,o-=2;break e}break;case 2:t.mode=TABLE;break;case 3:e.msg="invalid block type",t.mode=BAD}l>>>=2,o-=2;break;case STORED:for(l>>>=o&7,o-=o&7;o<32;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}if((l&65535)!==(l>>>16^65535)){e.msg="invalid stored block lengths",t.mode=BAD;break}if(t.length=l&65535,l=0,o=0,t.mode=COPY_,i===Z_TREES)break e;case COPY_:t.mode=COPY;case COPY:if(d=t.length,d){if(d>r&&(d=r),d>u&&(d=u),d===0)break e;_.set(n.subarray(a,a+d),f),r-=d,a+=d,u-=d,f+=d,t.length-=d;break}t.mode=TYPE;break;case TABLE:for(;o<14;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}if(t.nlen=(l&31)+257,l>>>=5,o-=5,t.ndist=(l&31)+1,l>>>=5,o-=5,t.ncode=(l&15)+4,l>>>=4,o-=4,t.nlen>286||t.ndist>30){e.msg="too many length or distance symbols",t.mode=BAD;break}t.have=0,t.mode=LENLENS;case LENLENS:for(;t.have<t.ncode;){for(;o<3;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}t.lens[N[t.have++]]=l&7,l>>>=3,o-=3}for(;t.have<19;)t.lens[N[t.have++]]=0;if(t.lencode=t.lendyn,t.lenbits=7,g={bits:t.lenbits},I=inftrees(CODES,t.lens,0,19,t.lencode,0,t.work,g),t.lenbits=g.bits,I){e.msg="invalid code lengths set",t.mode=BAD;break}t.have=0,t.mode=CODELENS;case CODELENS:for(;t.have<t.nlen+t.ndist;){for(;A=t.lencode[l&(1<<t.lenbits)-1],w=A>>>24,D=A>>>16&255,p=A&65535,!(w<=o);){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}if(p<16)l>>>=w,o-=w,t.lens[t.have++]=p;else{if(p===16){for(T=w+2;o<T;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}if(l>>>=w,o-=w,t.have===0){e.msg="invalid bit length repeat",t.mode=BAD;break}b=t.lens[t.have-1],d=3+(l&3),l>>>=2,o-=2}else if(p===17){for(T=w+3;o<T;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}l>>>=w,o-=w,b=0,d=3+(l&7),l>>>=3,o-=3}else{for(T=w+7;o<T;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}l>>>=w,o-=w,b=0,d=11+(l&127),l>>>=7,o-=7}if(t.have+d>t.nlen+t.ndist){e.msg="invalid bit length repeat",t.mode=BAD;break}for(;d--;)t.lens[t.have++]=b}}if(t.mode===BAD)break;if(t.lens[256]===0){e.msg="invalid code -- missing end-of-block",t.mode=BAD;break}if(t.lenbits=9,g={bits:t.lenbits},I=inftrees(LENS,t.lens,0,t.nlen,t.lencode,0,t.work,g),t.lenbits=g.bits,I){e.msg="invalid literal/lengths set",t.mode=BAD;break}if(t.distbits=6,t.distcode=t.distdyn,g={bits:t.distbits},I=inftrees(DISTS,t.lens,t.nlen,t.ndist,t.distcode,0,t.work,g),t.distbits=g.bits,I){e.msg="invalid distances set",t.mode=BAD;break}if(t.mode=LEN_,i===Z_TREES)break e;case LEN_:t.mode=LEN;case LEN:if(r>=6&&u>=258){e.next_out=f,e.avail_out=u,e.next_in=a,e.avail_in=r,t.hold=l,t.bits=o,inffast(e,c),f=e.next_out,_=e.output,u=e.avail_out,a=e.next_in,n=e.input,r=e.avail_in,l=t.hold,o=t.bits,t.mode===TYPE&&(t.back=-1);break}for(t.back=0;A=t.lencode[l&(1<<t.lenbits)-1],w=A>>>24,D=A>>>16&255,p=A&65535,!(w<=o);){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}if(D&&!(D&240)){for(h=w,R=D,O=p;A=t.lencode[O+((l&(1<<h+R)-1)>>h)],w=A>>>24,D=A>>>16&255,p=A&65535,!(h+w<=o);){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}l>>>=h,o-=h,t.back+=h}if(l>>>=w,o-=w,t.back+=w,t.length=p,D===0){t.mode=LIT;break}if(D&32){t.back=-1,t.mode=TYPE;break}if(D&64){e.msg="invalid literal/length code",t.mode=BAD;break}t.extra=D&15,t.mode=LENEXT;case LENEXT:if(t.extra){for(T=t.extra;o<T;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}t.length+=l&(1<<t.extra)-1,l>>>=t.extra,o-=t.extra,t.back+=t.extra}t.was=t.length,t.mode=DIST;case DIST:for(;A=t.distcode[l&(1<<t.distbits)-1],w=A>>>24,D=A>>>16&255,p=A&65535,!(w<=o);){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}if(!(D&240)){for(h=w,R=D,O=p;A=t.distcode[O+((l&(1<<h+R)-1)>>h)],w=A>>>24,D=A>>>16&255,p=A&65535,!(h+w<=o);){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}l>>>=h,o-=h,t.back+=h}if(l>>>=w,o-=w,t.back+=w,D&64){e.msg="invalid distance code",t.mode=BAD;break}t.offset=p,t.extra=D&15,t.mode=DISTEXT;case DISTEXT:if(t.extra){for(T=t.extra;o<T;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}t.offset+=l&(1<<t.extra)-1,l>>>=t.extra,o-=t.extra,t.back+=t.extra}if(t.offset>t.dmax){e.msg="invalid distance too far back",t.mode=BAD;break}t.mode=MATCH;case MATCH:if(u===0)break e;if(d=c-u,t.offset>d){if(d=t.offset-d,d>t.whave&&t.sane){e.msg="invalid distance too far back",t.mode=BAD;break}d>t.wnext?(d-=t.wnext,E=t.wsize-d):E=t.wnext-d,d>t.length&&(d=t.length),k=t.window}else k=_,E=f-t.offset,d=t.length;d>u&&(d=u),u-=d,t.length-=d;do _[f++]=k[E++];while(--d);t.length===0&&(t.mode=LEN);break;case LIT:if(u===0)break e;_[f++]=t.length,u--,t.mode=LEN;break;case CHECK:if(t.wrap){for(;o<32;){if(r===0)break e;r--,l|=n[a++]<<o,o+=8}if(c-=u,e.total_out+=c,t.total+=c,t.wrap&4&&c&&(e.adler=t.check=t.flags?crc32_1(t.check,_,c,f-c):adler32_1(t.check,_,c,f-c)),c=u,t.wrap&4&&(t.flags?l:zswap32(l))!==t.check){e.msg="incorrect data check",t.mode=BAD;break}l=0,o=0}t.mode=LENGTH;case LENGTH:if(t.wrap&&t.flags){for(;o<32;){if(r===0)break e;r--,l+=n[a++]<<o,o+=8}if(t.wrap&4&&l!==(t.total&4294967295)){e.msg="incorrect length check",t.mode=BAD;break}l=0,o=0}t.mode=DONE;case DONE:I=Z_STREAM_END$1;break e;case BAD:I=Z_DATA_ERROR$1;break e;case MEM:return Z_MEM_ERROR$1;case SYNC:default:return Z_STREAM_ERROR$1}return e.next_out=f,e.avail_out=u,e.next_in=a,e.avail_in=r,t.hold=l,t.bits=o,(t.wsize||c!==e.avail_out&&t.mode<BAD&&(t.mode<CHECK||i!==Z_FINISH$1))&&updatewindow(e,e.output,e.next_out,c-e.avail_out),S-=e.avail_in,c-=e.avail_out,e.total_in+=S,e.total_out+=c,t.total+=c,t.wrap&4&&c&&(e.adler=t.check=t.flags?crc32_1(t.check,_,c,e.next_out-c):adler32_1(t.check,_,c,e.next_out-c)),e.data_type=t.bits+(t.last?64:0)+(t.mode===TYPE?128:0)+(t.mode===LEN_||t.mode===COPY_?256:0),(S===0&&c===0||i===Z_FINISH$1)&&I===Z_OK$1&&(I=Z_BUF_ERROR),I},inflateEnd=e=>{if(inflateStateCheck(e))return Z_STREAM_ERROR$1;let i=e.state;return i.window&&(i.window=null),e.state=null,Z_OK$1},inflateGetHeader=(e,i)=>{if(inflateStateCheck(e))return Z_STREAM_ERROR$1;const t=e.state;return t.wrap&2?(t.head=i,i.done=!1,Z_OK$1):Z_STREAM_ERROR$1},inflateSetDictionary=(e,i)=>{const t=i.length;let n,_,a;return inflateStateCheck(e)||(n=e.state,n.wrap!==0&&n.mode!==DICT)?Z_STREAM_ERROR$1:n.mode===DICT&&(_=1,_=adler32_1(_,i,t,0),_!==n.check)?Z_DATA_ERROR$1:(a=updatewindow(e,i,t,t),a?(n.mode=MEM,Z_MEM_ERROR$1):(n.havedict=1,Z_OK$1))};var inflateReset_1=inflateReset,inflateReset2_1=inflateReset2,inflateResetKeep_1=inflateResetKeep,inflateInit_1=inflateInit,inflateInit2_1=inflateInit2,inflate_2$1=inflate$2,inflateEnd_1=inflateEnd,inflateGetHeader_1=inflateGetHeader,inflateSetDictionary_1=inflateSetDictionary,inflateInfo="pako inflate (from Nodeca project)",inflate_1$2={inflateReset:inflateReset_1,inflateReset2:inflateReset2_1,inflateResetKeep:inflateResetKeep_1,inflateInit:inflateInit_1,inflateInit2:inflateInit2_1,inflate:inflate_2$1,inflateEnd:inflateEnd_1,inflateGetHeader:inflateGetHeader_1,inflateSetDictionary:inflateSetDictionary_1,inflateInfo};function GZheader(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var gzheader=GZheader;const toString=Object.prototype.toString,{Z_NO_FLUSH,Z_FINISH,Z_OK,Z_STREAM_END,Z_NEED_DICT,Z_STREAM_ERROR,Z_DATA_ERROR,Z_MEM_ERROR}=constants$2;function Inflate$1(e){this.options=common.assign({chunkSize:1024*64,windowBits:15,to:""},e||{});const i=this.options;i.raw&&i.windowBits>=0&&i.windowBits<16&&(i.windowBits=-i.windowBits,i.windowBits===0&&(i.windowBits=-15)),i.windowBits>=0&&i.windowBits<16&&!(e&&e.windowBits)&&(i.windowBits+=32),i.windowBits>15&&i.windowBits<48&&(i.windowBits&15||(i.windowBits|=15)),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0;let t=inflate_1$2.inflateInit2(this.strm,i.windowBits);if(t!==Z_OK)throw new Error(messages[t]);if(this.header=new gzheader,inflate_1$2.inflateGetHeader(this.strm,this.header),i.dictionary&&(typeof i.dictionary=="string"?i.dictionary=strings.string2buf(i.dictionary):toString.call(i.dictionary)==="[object ArrayBuffer]"&&(i.dictionary=new Uint8Array(i.dictionary)),i.raw&&(t=inflate_1$2.inflateSetDictionary(this.strm,i.dictionary),t!==Z_OK)))throw new Error(messages[t])}Inflate$1.prototype.push=function(e,i){const t=this.strm,n=this.options.chunkSize,_=this.options.dictionary;let a,f,r;if(this.ended)return!1;for(i===~~i?f=i:f=i===!0?Z_FINISH:Z_NO_FLUSH,toString.call(e)==="[object ArrayBuffer]"?t.input=new Uint8Array(e):t.input=e,t.next_in=0,t.avail_in=t.input.length;;){for(t.avail_out===0&&(t.output=new Uint8Array(n),t.next_out=0,t.avail_out=n),a=inflate_1$2.inflate(t,f),a===Z_NEED_DICT&&_&&(a=inflate_1$2.inflateSetDictionary(t,_),a===Z_OK?a=inflate_1$2.inflate(t,f):a===Z_DATA_ERROR&&(a=Z_NEED_DICT));t.avail_in>0&&a===Z_STREAM_END&&t.state.wrap>0&&e[t.next_in]!==0;)inflate_1$2.inflateReset(t),a=inflate_1$2.inflate(t,f);switch(a){case Z_STREAM_ERROR:case Z_DATA_ERROR:case Z_NEED_DICT:case Z_MEM_ERROR:return this.onEnd(a),this.ended=!0,!1}if(r=t.avail_out,t.next_out&&(t.avail_out===0||a===Z_STREAM_END))if(this.options.to==="string"){let u=strings.utf8border(t.output,t.next_out),l=t.next_out-u,o=strings.buf2string(t.output,u);t.next_out=l,t.avail_out=n-l,l&&t.output.set(t.output.subarray(u,u+l),0),this.onData(o)}else this.onData(t.output.length===t.next_out?t.output:t.output.subarray(0,t.next_out));if(!(a===Z_OK&&r===0)){if(a===Z_STREAM_END)return a=inflate_1$2.inflateEnd(this.strm),this.onEnd(a),this.ended=!0,!0;if(t.avail_in===0)break}}return!0};Inflate$1.prototype.onData=function(e){this.chunks.push(e)};Inflate$1.prototype.onEnd=function(e){e===Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=common.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function inflate$1(e,i){const t=new Inflate$1(i);if(t.push(e),t.err)throw t.msg||messages[t.err];return t.result}function inflateRaw$1(e,i){return i=i||{},i.raw=!0,inflate$1(e,i)}var Inflate_1$1=Inflate$1,inflate_2=inflate$1,inflateRaw_1$1=inflateRaw$1,ungzip$1=inflate$1,constants=constants$2,inflate_1$1={Inflate:Inflate_1$1,inflate:inflate_2,inflateRaw:inflateRaw_1$1,ungzip:ungzip$1,constants};const{Deflate,deflate,deflateRaw,gzip}=deflate_1$1,{Inflate,inflate,inflateRaw,ungzip}=inflate_1$1;var Deflate_1=Deflate,deflate_1=deflate,deflateRaw_1=deflateRaw,gzip_1=gzip,Inflate_1=Inflate,inflate_1=inflate,inflateRaw_1=inflateRaw,ungzip_1=ungzip,constants_1=constants$2,pako={Deflate:Deflate_1,deflate:deflate_1,deflateRaw:deflateRaw_1,gzip:gzip_1,Inflate:Inflate_1,inflate:inflate_1,inflateRaw:inflateRaw_1,ungzip:ungzip_1,constants:constants_1};function randomString(e){for(var i="",t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",n=0;n<e;n++)i+=t.charAt(Math.floor(Math.random()*t.length));return i}class Json{static beautifulJson(e){let i=e;if(typeof e=="string"){let t="";try{let n=e.replace(/([{,]\s*)([0-9]+)(\s*:)/g,'$1"$2"$3');t=JSON5.parse(n)}catch{let _=this.beautifulJsonAuto(e);try{t=JSON.parse(_)}catch{return i}}i=t}return JSON.stringify(i,null,4)}static compressJson(e){return JSON.stringify(typeof e=="string"?JSON.parse(e):e)}static compressAndEscape(e){return e=this.compressJson(e),e.replace(/\\/g,"\\\\").replace(/"/g,'\\"')}static removeEscape(e){return e.replace(new RegExp('\\\\"',"gm"),'"')}static beautifulJsonAuto(e){for(var i=e.trim(),t="",n={"[":"]","{":"}"},_="",a="",f=0,r=!1,u=0,l=-1,o=0;o<e.length;o++){var S=e[o];if(n[S]){if(f==0&&o!=0){l=o;var c=i.substring(u,l);t=t+`
`+c}if(f==0){_=S,a=n[S],f=1,u=o;continue}else if(S==_){f=f+1;continue}}else if(S==a&&(f=f-1,f==0)){l=o+1;var c=i.substring(u,l);c=this.beautify(c,r),t=t+`
`+c,u=o+1;continue}}return f!=0&&(t=t+`
`+i.substring(u,e.length)),t}static beautify(s,isStrip){try{eval("obj="+s)}catch(e){return s}return isStrip?JSON.stringify(obj):JSON.stringify(obj,null,2)}static parse(e){return typeof e=="string"?JSON.parse(this.beautifulJson(e)):e}}function decompressText(e){let t=atob(e).split("").map(function(a){return a.charCodeAt(0)}),n=new Uint8Array(t);return pako.inflate(n,{to:"string"})}function compressData(e){if(!e)return e;const i=typeof e!="string"&&typeof e!="number"?JSON.stringify(e):e;let t=pako.deflate(i),n=Array.from(t),_="";return n.forEach((a,f)=>{_+=String.fromCharCode(a)}),btoa(_)}function getKeyByValue(e,i){for(const t in e)if(e[t]===i)return t;return null}export{Json as J,compressData as c,decompressText as d,getKeyByValue as g,randomString as r};
